{"version":3,"sources":["components/Constants.js","components/Header.js","components/Footer.js","components/views/origin/Home.js","components/views/Login.js","components/Main.js","reportWebVitals.js","index.js"],"names":["module","exports","MESSAGE","HOMETITLE","FOOTERTITLE","TEAMLOKI","TOTHE_MOON","LOADING_TEXT","UNEXPECTED_ERROR","ERROR_OCCURED","INVALID_CREDENTIAL","SOMETHING_WENT_WRONG","NODATA_FOUND","PAGE_REFRESH","PRICE_BASEON","BINANCE","COINGECKO","CURRENT_EXCHANGERATE","SIGNIN","LOGIN","LOGOUT","INPUT_USER","VIEW_MANAGER_EARNING","VIEW_SPONSOR_EARNING","MANAGER_EARNING","SPONSOR_EARNING","SUBMANAGER","MANAGER","SPONSOR","SCHOLAR","SPONSOR_SHARE","SPONSOR_NAME","SLP","AXS","SLP_DESC","TOP_RANK","TOP_MMR","TOP_INGAME_SLP","TOP_MMR_SLP","MMR","ELO","RANK","RANKING","LEADERBOARD","LAST_CLAIMED_SLP","LAST_CLAIMED_AT","CLAIMON","ADV","ADVENTURE","INGAME","SHARE","SHARED","RONIN","RONIN_ADDRESS","TOTAL","EARNING","EARNINGS","TOTAL_EARNINGS","CLOSE","NAME","ARENAGAME_STATUS","WIN","LOSE","DRAW","WIN_RATE","DAYS","OPEN_MARKETPLACE_PROFILE","OF","ADV_QUEST_TODAY","INGAME_SLP","INGAME_SLP_SHARING","RONIN_PLUS_SHARING_SLP","PHP_CURRENCY","WITHDRAWABLE","MINT_SLP","AVERAGE","AVERAGE_SLP_PERDAY","AVERAGE_SLP_PERDAY_V2","AVG_SLP_PERDAY","SHARE_SLP","VIEW_TOTALINCOME","TOTALINCOME","NOTIFBAR_CLICKABLE","SLP_PRICE","DATE","STARTED","TOTAL_INGAME_SLP","TOTAL_AVERAGE_SLP","TOTAL_MANAGER_SLP","TOTAL_MANAGERCLAIMABLE_SLP","TOTAL_SPONSOR_SLP","TOTAL_SCHOLAR_SLP","ADVENTURE_SLP","SHARED_SLP","RONIN_SLP","TOTAL_SLP","TOTAL_SLP_PHP","EARNINGS_PHP","DETAIL","DETAILS","CATEGORY","VIEW_ALL_EARNINGS","VIEW_CURRENT_EARNINGS","MANAGER_ALL_EARNINGS","MANAGER_CURRENT_EARNINGS","MMR_RANKING","TOTAL_CURRENT_EARNINGS","EMAIL_LOWMMR_SUBJECT","EMAIL_LOWMMR_MESSAGE","EMAIL_WARNINGMMR_MESSAGE","ROI_DESCRIPTIVE","ROI","BREED","BUY","INCOME","GUIDE_HERE","PVP_ENERGY","MANAGER_SLP","SPONSOR_SLP","SCHOLAR_SLP","EMAIL","PASSWORD","DAILYSLP","GET","POST","EMPTY","INSERT","UPDATE","ERROR_FETCH_DAILYSLP","ERROR_FILTER_DAILYSLP","UPDATE_ISKODATA","SHARELIMIT","LOKI_INPUTS","SUBMIT","ADD_EDIT","ADD","EDIT","CLAIM","WITHDRAW_EXCHANGE","WITHDRAW","WITHDRAWON","SELECT_NAME","SLP_CURRENCY","EARNEDON","ADDNEW_ISKO","HASSPONSOR","YESTERDAYSLP","VIEW_GAINEDSLP_CHART","VIEW_AXIE_TEAM","VIEW_EARNINGS","REWARDS_SLP","PHP","MGR","SCH","DELETE","HIGH_SLPGAINED","BATTELOG_ISDISPLAY","RESET_DAILYSLP","PROCESS_COUNT","RUN_TOKEN","ERROR_JSONPARSE","BAD_REQUEST","INTERNAL_SERVER_ERROR","EMPTYPAYLOAD","ERROR_PROCEDURE","STARTED_SELECTQUERY","END_SELECTQUERY","STARTED_INSERTQUERY","END_INSERTQUERY","STARTED_UPDATEQUERY","END_UPDATEQUERY","STARTED_DELETEQUERY","END_DELETEQUERY","STARTEDPOST","ENDPOST","TEAMRECORD","MANAGER_EARNED","STARTED_GENERATE_TOKEN","ERROR_GENERATE_TOKEN","END_GENERATE_TOKEN","STARTED_GENERATE_RANDOMMSG","CANT_GEN_TOKEN_RANDOMMSG","STARTED_GENERATE_SIGNRONINMSG","CANT_GEN_TOKEN_SIGNRONINMSG","STARTED_CREATE_ACCESSMSG","CANT_GEN_TOKEN_ACCESSMSG","STARTED_AUTHLOGIN","END_AUTHLOGIN","ERROR_AUTHLOGIN","STARTED_INGAMESLP_API","STARTED_INGAMESLP","END_INGAMESLP","ERROR_INGAMESLP","STARTED_CRYPTOCOINS_API","STARTED_CRYPTOCOINS","END_CRYPTOCOINS","ERROR_CRYPTOCOINS","TABLE","USERPROFILE","QUERY","SELECT","MANAGEREARNED","Header","props","toggleCollapse","setState","isOpen","state","isUser","user","event","preventDefault","Cookies","set","window","location","reload","open","tag","scrolling","fixed","dark","expand","href","className","onClick","this","id","navbar","right","active","nav","caret","onLogoutHandle","bind","React","Component","Footer","color","fluid","Date","getFullYear","momentToday","moment","tz","unixMomentToday","getTime","console","log","moments","format","_INGAMESLP","Home","pageRefresh","time","setTimeout","isModalIskoInputsOpen","setInterval","$","removeClass","removeAttr","addClass","css","apiRefresh","numberWithCommas","value","toString","replace","modalLeaderboardToggle","isModalLeaderboardOpen","modalManagerEarningToggle","isModalManagerEarningOpen","modalPlayerDetailsToggle","playerDetails","a","details","length","findDetail","find","items","ID","Object","keys","isModalPlayerDetailsOpen","modalPlayerDetails","isViewAxieTeam","modalIskoInputs","tabsIskoInputs","tab","e","tabIskoInputsActive","getCryptoCoins","ajax","url","dataType","cache","then","result","error","currencySLP","currencyAXS","currencyNAME","data","currencyURI","URI","catch","err","authLogin","credentials","Promise","resolve","reject","type","JSON","stringify","contentType","category","undefined","token","accessToken","recordProcess","response","counter","dataRecords","dataWithdraw","withdraw","dataManagerEarned","managerEarned","dataResultPromise","map","item","PASS","isDeleted","DELETEIND","userEthAddress","ethAddress","ADDRESS","substring","isSponsorName","toLowerCase","arrSponsorName","push","SHR_SPONSOR","processPlayerDetails","detailLocalStored","localStorage","getItem","parse","email","password","getPlayerDetails","all","results","initDisplay","leaderboardDisplay","dataResult","filter","eth","sort","b","topRank","dataItem","index","indexCount","order","topUserRank","nameTopRank","nameSub","name","isUserEmail","isDelete","rank","inGameSLP","topUserInGameSLP","nameTopInGameSLP","document","body","classList","add","playerDataTableColums","label","field","isLoaded","isPlayerLoaded","playerDataTable","columns","rows","leaderboardDatatable","playerRecords","notifStr","detailsLength","dataRes","detailProcess","detailsReturn","assign","getPlayerWallet","WALLET","slp","axs","ron","getPlayerLeaderboard","tier","vstar","SHR_MANAGER","managerShare","SHAREDSLP","Math","ceil","withdrawable","totalManagerClaimableSLP","Number","totalManagerSLP","totalSponsorSLPRes","sponsorShare","floor","totalSponsorSLP","iskoShare","SHR_SCHOLAR","totalScholarSLP","includes","MANAGEREARNING","CLAIMED","REACHEDROI","PHPTOTAL","SLPTOTAL","SLPCURRENCY","managerPHPInvestment","managerData","managerEarnings","WITHDRAWEARNING","withdrawData","totalIngameSLPRes","totalInGameSLP","quantity","totalAverageInGameSLP","TOTALEARNING_SLP","TOTALEARNING_PHP","PLAYER","setItem","playerDataTableRes","mintSLP","shareSLP","Fragment","roninSLP","totalEarningSLP","totalEarningPHP","toFixed","totalEarningPHPSLP","leaderboard","clickEvent","balances","dataSet","balance","RON","res","errorMsg","maxGainSLP","daysClaimable","defaultDailyQuota","isValidAddTeam","isValidWithdraw","isValidManagerEarn","slctClaimId","slctAddEditId","hasSponsor","split","target","innerText","isViewMangerEarning","checked","val","attr","trigger","shrManager","shrScholar","shrSponsor","shareTotal","dateToday","sponsorName","datas","STARTED_ON","ACTION","siblings","roninAddress","slpTotal","slpCurrency","withdrawOn","WITHDRAW_ON","text","earnedOn","EARNED_ON","size","rel","md","lg","src","alt","toggle","striped","bordered","hover","responsive","noBottomColumns","sortable","entries","displayEntries","scrollY","maxHeight","textWhite","colSpan","rowSpan","unix","toLocaleString","between","onScholarEaningNActiveTeamHandle","role","activeItem","tabId","onSubmit","onAddEditRecordHandle","onChange","handleAddEditIskoChange","required","min","max","containerClass","handleHasSponsorCheckChange","handleIsDeleteCheckChange","icon","handleClaimChange","onWithdrawHandle","disabled","step","onManagerEarnedHandle","title","renderCurrencies","renderSubDetails","renderEmptyDetails","entriesOptions","renderModalLeaderboard","renderModalManagerEarnings","renderModalPlayerDetails","renderModalIskoInputs","Login","isNotif","notifCat","isValidUser","toUpperCase","validUser","valid","toLocaleLowerCase","validSponsor","sm","onLoginHandle","onInputChangeHandle","group","Main","promptUser","get","renderBody","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.907d6b5c.chunk.js","sourcesContent":["const MESSAGE = {\r\n    HOMETITLE: \"Home | Team Loki Tracker\",\r\n    FOOTERTITLE: \"Copyright: Team Loki x To the Moon ® All Rights Reserved.\",\r\n    TEAMLOKI: \"Team Loki\",\r\n    TOTHE_MOON: \"To the Moon\",\r\n    LOADING_TEXT: \"Loading, please wait...\",\r\n    UNEXPECTED_ERROR: \"Unexpected error, please reload the page!\",\r\n    ERROR_OCCURED: \"Oh well, you failed. Here some thoughts on the error that occured:\",\r\n    INVALID_CREDENTIAL: \"Invalid credential. Please try again.\",\r\n    SOMETHING_WENT_WRONG: \"Something went wrong!\",\r\n    NODATA_FOUND: \"No Data Found.\",\r\n    PAGE_REFRESH: \"Page refresh automatically within 120 seconds.\",\r\n    PRICE_BASEON: \"Prices are based on\",\r\n    BINANCE: \"Binance\",\r\n    COINGECKO: \"CoinGecko\",\r\n    CURRENT_EXCHANGERATE: \"Current exchange rate\",\r\n    SIGNIN: \"Sign In\",\r\n    LOGIN: \"Login\",\r\n    LOGOUT: \"Logout\",\r\n    INPUT_USER: \"Type your username or email\",\r\n    VIEW_MANAGER_EARNING: \"View Manager Earnings\",\r\n    VIEW_SPONSOR_EARNING: \"View Sponsor Earnings\",\r\n    MANAGER_EARNING: \"Manager Earnings\",\r\n    SPONSOR_EARNING: \"Sponsor Earnings\",\r\n    SUBMANAGER: \"SUBManager\",\r\n    MANAGER: \"Manager\",\r\n    SPONSOR: \"Sponsor\",\r\n    SCHOLAR: \"Scholar\",\r\n    SPONSOR_SHARE: \"Sponsor Share\",\r\n    SPONSOR_NAME: \"Sponsor Name\",\r\n    SLP: \"SLP\",\r\n    AXS: \"AXS\",\r\n    SLP_DESC: \"Smooth Love Potion\",\r\n    TOP_RANK: \"Top RANK\",\r\n    TOP_MMR: \"Top MMR\",\r\n    TOP_INGAME_SLP: \"Top InGame SLP\",\r\n    TOP_MMR_SLP: \"Top MMR and SLP\",\r\n    MMR: \"MMR\",\r\n    ELO: \"ELO\",\r\n    RANK: \"Rank\",\r\n    RANKING: \"Ranking\",\r\n    LEADERBOARD: \"Leaderboard\",\r\n    LAST_CLAIMED_SLP: \"Last Claimed SLP\",\r\n    LAST_CLAIMED_AT: \"Last Claimed At\",\r\n    CLAIMON: \"Claim On\",\r\n    ADV: \"ADV\",\r\n    ADVENTURE: \"Adventure\",\r\n    INGAME: \"InGame\",\r\n    SHARE: \"Share\",\r\n    SHARED: \"Shared\",\r\n    RONIN: \"Ronin\",\r\n    RONIN_ADDRESS: \"Ronin Address\",\r\n    TOTAL: \"Total\",\r\n    EARNING: \"Earning\",\r\n    EARNINGS: \"Earnings\",\r\n    TOTAL_EARNINGS: \"Total Earnings\",\r\n    CLOSE: \"Close\",\r\n    NAME: \"Name\",\r\n    ARENAGAME_STATUS: \"Arena Game Status\",\r\n    WIN: \"Win\",\r\n    LOSE: \"Lose\",\r\n    DRAW: \"Draw\",\r\n    WIN_RATE: \"Win Rate\",\r\n    DAYS: \"Day(s)\",\r\n    OPEN_MARKETPLACE_PROFILE: \"View marketplace profile\",\r\n    OF: \"of\",\r\n    ADV_QUEST_TODAY: \"Adventure SLP Quest (Today)\",\r\n    INGAME_SLP: \"InGame SLP\",\r\n    INGAME_SLP_SHARING: \"In Game SLP Sharing\",\r\n    RONIN_PLUS_SHARING_SLP: \"Ronin SLP + Sharing SLP\",\r\n    PHP_CURRENCY: \"PHP Currency\",\r\n    WITHDRAWABLE: \"Withdrawable\",\r\n    MINT_SLP: \"Mint SLP\",\r\n    AVERAGE: \"Average\",\r\n    AVERAGE_SLP_PERDAY: \"Average SLP per day\",\r\n    AVERAGE_SLP_PERDAY_V2: \"Average SLP / Day\",\r\n    AVG_SLP_PERDAY: \"Avg. SLP/Day\",\r\n    SHARE_SLP: \"Share SLP\",\r\n    VIEW_TOTALINCOME: \"View Total Income\",\r\n    TOTALINCOME: \"Total Income\",\r\n    NOTIFBAR_CLICKABLE: \"Notification bar is Clickable.\",\r\n    SLP_PRICE: \"SLP Price\",\r\n    DATE: \"Date\",\r\n    STARTED: \"Started\",\r\n    TOTAL_INGAME_SLP: \"Total InGame SLP\",\r\n    TOTAL_AVERAGE_SLP: \"Total Average SLP\",\r\n    TOTAL_MANAGER_SLP: \"Total Manager SLP\",\r\n    TOTAL_MANAGERCLAIMABLE_SLP: \"Total Manager Claimable SLP\",\r\n    TOTAL_SPONSOR_SLP: \"Total Sponsor SLP\",\r\n    TOTAL_SCHOLAR_SLP: \"Total Scholar SLP\",\r\n    ADVENTURE_SLP: \"Adventure SLP\",\r\n    SHARED_SLP: \"Shared SLP\",\r\n    RONIN_SLP: \"Ronin SLP\",\r\n    TOTAL_SLP: \"Total SLP\",\r\n    TOTAL_SLP_PHP: \"Total SLP/PHP\",\r\n    EARNINGS_PHP: \"Earnings (PHP)\",\r\n    DETAIL: \"Detail\",\r\n    DETAILS: \"Details\",\r\n    CATEGORY: \"Category\",\r\n    VIEW_ALL_EARNINGS: \"View All Earnings\",\r\n    VIEW_CURRENT_EARNINGS: \"View Current Earnings\",\r\n    MANAGER_ALL_EARNINGS: \"All Manager Earnings\",\r\n    MANAGER_CURRENT_EARNINGS: \"Current Manager Earnings\",\r\n    MMR_RANKING: \"MMR Ranking\",\r\n    TOTAL_CURRENT_EARNINGS: \"Total Current Earnings\",\r\n    EMAIL_LOWMMR_SUBJECT: \"Team Loki MMR Ranking\",\r\n    EMAIL_LOWMMR_MESSAGE: \"You receive this automated email due to your MMR Ranking, keep it up and learn more. If need help, don't hesitate to ping on our Messenger Group Chat. Stay Low Key as our tagline.\",\r\n    EMAIL_WARNINGMMR_MESSAGE: \"You receive this automated email due to your MMR Ranking, keep playing and learn more. Stay Low Key as our tagline.\",\r\n    ROI_DESCRIPTIVE: \"Return of Investment\",\r\n    ROI: \"ROI\",\r\n    BREED: \"Breed\",\r\n    BUY: \"Buy\",\r\n    INCOME: \"Income\",\r\n    GUIDE_HERE: \"Guides here!\",\r\n    PVP_ENERGY: \"PvP Energy\",\r\n    MANAGER_SLP: \"Manager SLP\",\r\n    SPONSOR_SLP: \"Sponsor SLP\",\r\n    SCHOLAR_SLP: \"Scholar SLP\",\r\n    EMAIL: \"Email\",\r\n    PASSWORD: \"Password\",\r\n    DAILYSLP: \"Daily SLP\",\r\n    GET: \"GET\",\r\n    POST: \"POST\",\r\n    EMPTY: \"EMPTY\",\r\n    INSERT: \"Insert\",\r\n    UPDATE: \"UPDATE\",\r\n    ERROR_FETCH_DAILYSLP: 'Error in fetching data of Daily SLP',\r\n    ERROR_FILTER_DAILYSLP: 'Error in filter data of Daily SLP',\r\n    UPDATE_ISKODATA: \"Update Scholar Data\",\r\n    SHARELIMIT: \"Sharing must be equal to 100\",\r\n    LOKI_INPUTS: \"Loki Inputs\",\r\n    SUBMIT: \"Submit\",\r\n    ADD_EDIT: \"Add / Edit\",\r\n    ADD: \"Add\",\r\n    EDIT: \"Edit\",\r\n    CLAIM: \"Claim\",\r\n    WITHDRAW_EXCHANGE: \"Withdraw / Exchange\",\r\n    WITHDRAW: \"Withdraw\",\r\n    WITHDRAWON: \"Withdraw On\",\r\n    SELECT_NAME: \"Select Name\",\r\n    SLP_CURRENCY: \"SLP Currency\",\r\n    EARNEDON: \"Earned On\",\r\n    ADDNEW_ISKO: \"Add New Scholar\",\r\n    HASSPONSOR: \"Has Sponsor?\",\r\n    YESTERDAYSLP: \"Yesterday SLP\",\r\n    VIEW_GAINEDSLP_CHART: \"View Gained SLP Chart\",\r\n    VIEW_AXIE_TEAM: \"View Active Axie Team\",\r\n    VIEW_EARNINGS: \"View Earnings\",\r\n    REWARDS_SLP: \"Rewards SLP\",\r\n    PHP: \"PHP\",\r\n    MGR: \"MGR\",\r\n    SCH: \"SCH\",\r\n    DELETE: \"Delete?\",\r\n    HIGH_SLPGAINED: \"Highest Gained SLP\",\r\n    BATTELOG_ISDISPLAY: \"Show Battle Log?\",\r\n    RESET_DAILYSLP: \"Reset Daily SLP\",\r\n    PROCESS_COUNT: \"Process Count\",\r\n    RUN_TOKEN: \"Running Access Token\",\r\n    ERROR_JSONPARSE: \"Error in JSON Parsing\",\r\n    BAD_REQUEST: \"400 Bad Request\",\r\n    INTERNAL_SERVER_ERROR: \"Internal Server Error\",\r\n    EMPTYPAYLOAD: \"Empty Payload\",\r\n    ERROR_PROCEDURE: \"Error in QUERY Procedure\",\r\n    STARTED_SELECTQUERY: \"SELECT QUERY Started!\",\r\n    END_SELECTQUERY: \"SELECT QUERY END!\",\r\n    STARTED_INSERTQUERY: \"INSERT QUERY Started!\",\r\n    END_INSERTQUERY: \"INSERT QUERY END!\",\r\n    STARTED_UPDATEQUERY: \"UPDATE QUERY Started!\",\r\n    END_UPDATEQUERY: \"UPDATE QUERY END!\",\r\n    STARTED_DELETEQUERY: \"DELETE QUERY Started!\",\r\n    END_DELETEQUERY: \"DELETE QUERY END!\",\r\n    STARTEDPOST: \"POST Started!\",\r\n    ENDPOST: \"POST QUERY END!\",\r\n    TEAMRECORD: \"Team Record\",\r\n    MANAGER_EARNED: \"Manager Earned\",\r\n    STARTED_GENERATE_TOKEN: \"Generate Access Token Started\",\r\n    ERROR_GENERATE_TOKEN: \"Error in Generation of Access Token\",\r\n    END_GENERATE_TOKEN: \"Generate Access Token End\",\r\n    STARTED_GENERATE_RANDOMMSG: \"Generate Access Token Random Message Started\",\r\n    CANT_GEN_TOKEN_RANDOMMSG: \"Could not generate Access Token Random Message\",\r\n    STARTED_GENERATE_SIGNRONINMSG: \"Generate Sign Ronin Message Started\",\r\n    CANT_GEN_TOKEN_SIGNRONINMSG: \"Could not Sign Ronin Message\",\r\n    STARTED_CREATE_ACCESSMSG: \"Create Access Token Started\",\r\n    CANT_GEN_TOKEN_ACCESSMSG: \"Could not Create Access Token\",\r\n    STARTED_AUTHLOGIN: \"Auth Login Started\",\r\n    END_AUTHLOGIN: \"Auth Login End\",\r\n    ERROR_AUTHLOGIN: \"Error in Auth Login\",\r\n    STARTED_INGAMESLP_API: \"Origin InGame SLP API Started\",\r\n    STARTED_INGAMESLP: \"Origin InGame SLP Started\",\r\n    END_INGAMESLP: \"Origin InGame SLP End\",\r\n    ERROR_INGAMESLP: \"Error in Origin InGame SLP\",\r\n    STARTED_CRYPTOCOINS_API: \"Crypto Coins API Started\",\r\n    STARTED_CRYPTOCOINS: \"Crypto Coins Started\",\r\n    END_CRYPTOCOINS: \"Crypto Coins End\",\r\n    ERROR_CRYPTOCOINS: \"Error in Crypto Coins\",\r\n}\r\n\r\nconst TABLE = {\r\n    USERPROFILE: `public.\"TB_USERPROFILE\"`,\r\n    WITHDRAW: `public.\"TB_WITHDRAW\"`,\r\n    DAILYSLP: `public.\"TB_DAILYSLP\"`,\r\n}\r\n\r\nconst QUERY = {\r\n    SELECT: {\r\n        USERPROFILE: `SELECT * FROM public.\"TB_USERPROFILE\"`,\r\n        DAILYSLP: `SELECT * FROM public.\"DAILYSLP\"`,\r\n        WITHDRAW: `SELECT * FROM public.\"TB_WITHDRAW\"`,\r\n        MANAGEREARNED: `SELECT * FROM public.\"TB_MANAGEREARNED\"`,\r\n        YESTERDAYSLP: `SELECT * FROM public.\"TB_YESTERDAYSLP\"`\r\n    },\r\n    INSERT: {\r\n        USERPROFILE: `INSERT INTO public.\"TB_USERPROFILE\"`,\r\n        DAILYSLP: `INSERT INTO public.\"TB_DAILYSLP\"`,\r\n        WITHDRAW: `INSERT INTO public.\"TB_WITHDRAW\"`,\r\n        MANAGEREARNED: `INSERT INTO public.\"TB_MANAGEREARNED\"`,\r\n        YESTERDAYSLP: `INSERT INTO public.\"TB_YESTERDAYSLP\"`\r\n    },\r\n    UPDATE: {\r\n        USERPROFILE: `UPDATE public.\"TB_USERPROFILE\"`,\r\n        DAILYSLP: `UPDATE public.\"TB_DAILYSLP\"`\r\n    },\r\n    DELETE: {\r\n        YESTERDAYSLP: `DELETE FROM public.\"TB_YESTERDAYSLP\"`\r\n    }\r\n}\r\n\r\n// Export the function\r\nmodule.exports = {\r\n    MESSAGE,\r\n    TABLE,\r\n    QUERY\r\n};","import React from 'react'\r\nimport { MESSAGE } from './Constants';\r\nimport {\r\n    MDBBox, MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavbarToggler, MDBCollapse, MDBContainer,\r\n    MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem\r\n} from \"mdbreact\";\r\nimport Cookies from 'js-cookie'\r\n\r\nclass Header extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isOpen: false,\r\n            isUser: this.props.user || \"\"\r\n        };\r\n    }\r\n    \r\n    toggleCollapse = () => {\r\n        this.setState({ isOpen: !this.state.isOpen });\r\n    }\r\n\r\n    onLogoutHandle(event) {\r\n        event.preventDefault();\r\n        // Logout x removed cookie\r\n        Cookies.set('filter', '');\r\n        // Reload page\r\n        window.location.reload();\r\n    }\r\n\r\n    // Open scholar data json\r\n    onWindowsOpen(event) {\r\n        event.preventDefault();\r\n        window.open(\"https://github.com/gutierrezjeralds/teamloki-tracker/edit/main/client/public/assets/json/eth-address.json\");\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <MDBBox tag=\"header\">\r\n                <MDBNavbar scrolling fixed=\"top\" dark expand=\"lg\">\r\n                    <MDBContainer>\r\n                        <MDBNavbarBrand>\r\n                            <a href=\"/\">\r\n                                <MDBBox tag=\"span\" className=\"d-dlock m-0 text-center font-size-1pt5rem z-depth-0 rounded-circle\">{MESSAGE.TEAMLOKI}</MDBBox>\r\n                            </a>\r\n                        </MDBNavbarBrand>\r\n                        <MDBNavbarToggler onClick={this.toggleCollapse} />\r\n                        <MDBCollapse id=\"navbarCollapse3\" isOpen={this.state.isOpen} navbar className=\"justify-content-end\">\r\n                            <MDBNavbarNav right>\r\n                                <MDBNavItem active>\r\n                                    <MDBDropdown>\r\n                                        <MDBDropdownToggle nav caret>\r\n                                            <MDBBox tag=\"span\" className=\"mr-2\">{MESSAGE.TOTHE_MOON}</MDBBox>\r\n                                        </MDBDropdownToggle>\r\n                                        <MDBDropdownMenu>\r\n                                            <MDBDropdownItem onClick={this.onLogoutHandle.bind(this)}>{MESSAGE.LOGOUT}</MDBDropdownItem>\r\n                                        </MDBDropdownMenu>\r\n                                    </MDBDropdown>\r\n                                </MDBNavItem>\r\n                            </MDBNavbarNav>\r\n                        </MDBCollapse>\r\n                    </MDBContainer>\r\n                </MDBNavbar>\r\n            </MDBBox>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport { MDBContainer, MDBFooter, MDBBox } from \"mdbreact\";\r\nimport { MESSAGE } from './Constants';\r\n\r\nclass Footer extends React.Component {\r\n    render() {\r\n        return (\r\n            <MDBFooter color=\"\" className=\"font-small w-100\">\r\n                <MDBBox tag=\"div\" className=\"text-center py-2\">\r\n                    {/* <MDBBox tag=\"span\" className=\"d-block d-md-inline d-lg-inline\">{MESSAGE.PAGE_REFRESH} </MDBBox>\r\n                    <MDBBox tag=\"span\">{MESSAGE.NOTIFBAR_CLICKABLE}</MDBBox> */}\r\n                </MDBBox>\r\n                <MDBBox tag=\"div\" className=\"footer-copyright text-center py-3\">\r\n                    <MDBContainer fluid>\r\n                        &copy; {new Date().getFullYear()} {MESSAGE.FOOTERTITLE}\r\n                    </MDBContainer>\r\n                </MDBBox>\r\n          </MDBFooter>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer","import React from \"react\";\r\nimport $ from 'jquery';\r\n// import Cookies from 'js-cookie'\r\nimport { \r\n    MDBBox, MDBContainer, MDBRow, MDBCol, MDBCard, MDBCardBody,\r\n    MDBTable, MDBTableBody, MDBTableHead,\r\n    MDBModal, MDBModalHeader, MDBModalBody,\r\n    MDBDataTable, MDBIcon, MDBAnimation, MDBInput,\r\n    MDBTabPane, MDBTabContent, MDBNav, MDBNavItem\r\n} from \"mdbreact\";\r\nimport Moment from 'react-moment';\r\nimport moments from 'moment';\r\nimport moment from 'moment-timezone';\r\nimport { MESSAGE } from '../../Constants';\r\n\r\n// const moment = require('moment-timezone');\r\nconst momentToday = moment().tz('Asia/Manila');\r\nconst unixMomentToday = new Date(momentToday).getTime();\r\nconsole.log(\"Default\", moments().format(\"YYYY-MM-DD HH:mm:ss\"));\r\nconsole.log(\"Timezone\", momentToday.format(\"YYYY-MM-DD HH:mm:ss\"));\r\nconsole.log(\"Unix Timezone\", unixMomentToday);\r\n\r\n// Global InGame SLP Default\r\nconst _INGAMESLP = {\r\n    \"itemId\": \"slp\",\r\n    \"quantity\": 0,\r\n    \"withdrawable\": 0\r\n}\r\n\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            error: false,\r\n            errorMsg: MESSAGE.UNEXPECTED_ERROR,\r\n            isLoaded: false,\r\n            currencySLP: 0,\r\n            currencyAXS: 0,\r\n            currencyNAME: \"\",\r\n            currencyURI: \"\",\r\n            maxGainSLP: 200, // Max Gained SLP for validation of inserting in table\r\n            daysClaimable: 7, // Default day set for allow slp claim\r\n            defaultDailyQuota: 30, // Default daily quota\r\n            managerPHPInvestment: 410000, // Estimated Investment\r\n            isUser: this.props.user || \"\",\r\n            isUserEmail: false,\r\n            isSponsorName: \"\",\r\n            arrSponsorName: [],\r\n            totalManagerClaimableSLP: 0,\r\n            totalManagerSLP: 0,\r\n            totalSponsorSLP: 0,\r\n            totalScholarSLP: 0,\r\n            totalInGameSLP: 0,\r\n            totalAverageInGameSLP: 0,\r\n            isPlayerLoaded: false,\r\n            playerRecords: [],\r\n            playerDataTable: {},\r\n            leaderboardDatatable: {},\r\n            topUserRank: \"\",\r\n            topUserInGameSLP: \"\",\r\n            isModalLeaderboardOpen: false,\r\n            isModalManagerEarningOpen: false,\r\n            managerEarnings: false, // Object if has data\r\n            isModalPlayerDetailsOpen: false,\r\n            modalPlayerDetails: [],\r\n            isViewAxieTeam: MESSAGE.VIEW_AXIE_TEAM,\r\n            isModalIskoInputsOpen: false,\r\n            isValidAddTeam: 0,\r\n            isValidWithdraw: 0,\r\n            isValidManagerEarn: 0,\r\n            tabIskoInputsActive: \"1\",\r\n            slctClaimId: \"\",\r\n            slctAddEditId: \"\",\r\n            hasSponsor: false,\r\n            isDeleted: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.pageRefresh(120000); // Refresh in 2 minutes\r\n        this.getCryptoCoins();\r\n        this.recordProcess();\r\n        // Check if the user is valid email x for checking for display all the player data\r\n        if (this.state.isUser) {\r\n            const emailSplit = this.state.isUser.split('@');\r\n            if (emailSplit.length >= 2) { // Is valid Email\r\n                this.setState({\r\n                    isUserEmail: true\r\n                })\r\n            }\r\n        }\r\n    }\r\n    \r\n    // Page reload\r\n    pageRefresh = (time) => {\r\n        setTimeout( () => {\r\n            if (!this.state.isModalIskoInputsOpen) { // Dont reload when other modal is open\r\n                return window.location.reload();\r\n            }\r\n            // Return\r\n            return true;\r\n        }, time);\r\n\r\n        // Guide information button Bounce every 5 seconds\r\n        setInterval(function() {\r\n            $(\".guides-btn\").removeClass(\"bounce\").removeAttr(\"style\");\r\n            setTimeout(function() {\r\n                $(\".guides-btn\").addClass(\"bounce\").css({\"animation-name\": \"bounce\", \"visibility\": \"visible\", \"animation-iteration-count\": \"1\"});\r\n            }, 1000);\r\n        }, 5000);\r\n    }\r\n\r\n    // API reload\r\n    apiRefresh = () => {\r\n        setTimeout(() => {\r\n            // this.getCoingecko();\r\n        }, 5000); // Refresh in 5 seconds\r\n    }\r\n\r\n    // Adding comma in number x replacement in toLocaleString()\r\n    numberWithCommas = (value) => {\r\n        if (value) {\r\n            return value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n        }\r\n        return value;\r\n    }\r\n\r\n    // Modal Toggle for view details of Leaderboard\r\n    modalLeaderboardToggle = () => () => {\r\n        this.setState({\r\n            isModalLeaderboardOpen: !this.state.isModalLeaderboardOpen\r\n        });\r\n    }\r\n\r\n    // Modal Toggle for view of Manager Earning\r\n    modalManagerEarningToggle = () => () => {\r\n        // Open Modal Eraning from filters of \"Manager\"\r\n        this.setState({\r\n            isModalManagerEarningOpen: !this.state.isModalManagerEarningOpen\r\n        });\r\n    }\r\n\r\n    // Modal Toggle for view of Players details\r\n    modalPlayerDetailsToggle = (id, playerDetails) => async () => {\r\n        let details = [];\r\n        if (id && playerDetails.length > 0) {\r\n            const findDetail = playerDetails.find(items => items.ID === id);\r\n            if (Object.keys(findDetail).length > 0) {\r\n                details = [findDetail];\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            isModalPlayerDetailsOpen: !this.state.isModalPlayerDetailsOpen,\r\n            modalPlayerDetails: details,\r\n            isViewAxieTeam: MESSAGE.VIEW_AXIE_TEAM\r\n        });\r\n    }\r\n\r\n    // Hide and Show Player Earnings and Active Axie Team\r\n    onScholarEaningNActiveTeamHandle(event) {\r\n        if (event.target.innerText === MESSAGE.VIEW_EARNINGS) {\r\n            this.setState({\r\n                isViewAxieTeam: MESSAGE.VIEW_EARNINGS,\r\n            })\r\n        } else {\r\n            this.setState({\r\n                isViewAxieTeam: MESSAGE.VIEW_AXIE_TEAM,\r\n            })\r\n        }\r\n    }\r\n\r\n    // Modal Toggle for adding new team\r\n    modalIskoInputs = () => () => {\r\n        this.setState({\r\n            isModalIskoInputsOpen: !this.state.isModalIskoInputsOpen\r\n        });\r\n    }\r\n\r\n    // Hide and Show Manager Total Earning\r\n    onManagerEarningHandle(event) {\r\n        if (event.target.innerText === MESSAGE.VIEW_ALL_EARNINGS) {\r\n            this.setState({\r\n                isViewMangerEarning: MESSAGE.VIEW_ALL_EARNINGS,\r\n            })\r\n        } else {\r\n            this.setState({\r\n                isViewMangerEarning: MESSAGE.VIEW_CURRENT_EARNINGS,\r\n            })\r\n        }\r\n    }\r\n\r\n    // Tabs Toggle for Scholar inputs\r\n    tabsIskoInputs = tab => e => {\r\n        if (this.state.tabIskoInputsActive !== tab) {\r\n            this.setState({\r\n                tabIskoInputsActive: tab\r\n            });\r\n        }\r\n    };\r\n\r\n    // Onchange checkbox if has sponsor in add/edit modal\r\n    handleHasSponsorCheckChange(event) {\r\n        this.setState({\r\n            hasSponsor: event.target.checked\r\n        })\r\n    }\r\n\r\n    // Onchange checkbos if user profile is delete in add/edit modal\r\n    handleIsDeleteCheckChange(event) {\r\n        this.setState({\r\n            isDeleted: event.target.checked\r\n        })\r\n    }\r\n\r\n    // Handle for onchange select of Add/Edit Scholar\r\n    handleAddEditIskoChange(event) {\r\n        this.setState({\r\n            slctAddEditId: event.target.value,\r\n            hasSponsor: false,\r\n            isDeleted: false\r\n        })\r\n\r\n        if (event.target.value) {\r\n            // Update Select Option text\r\n            // $(\".addEdit-inputHolder\").find(\"select\").text(`${MESSAGE.EDIT}: ${event.target.value}`);\r\n            const dataSet = this.state.playerRecords.filter(item => (item.ID).toString() === (event.target.value).toString() || item.NAME === event.target.value); // Filter valid data\r\n            if (dataSet.length > 0) {\r\n                // Check if item has sponsor\r\n                if (Number(dataSet[0].SHR_SPONSOR) > 0) {\r\n                    this.setState({\r\n                        hasSponsor: true\r\n                    })\r\n                }\r\n                // Check if item is delete\r\n                if (dataSet[0].isDeleted) {\r\n                    this.setState({\r\n                        isDeleted: true\r\n                    })\r\n                }\r\n                // Update input fields\r\n                $(\".addEdit-inputHolder input[name=ADDRESS]\").val(dataSet[0].ADDRESS).attr(\"value\", dataSet[0].ADDRESS).trigger(\"change\").attr(\"disabled\", \"disabled\");\r\n                $(\".addEdit-inputHolder input[name=NAME]\").val(dataSet[0].NAME).attr(\"value\", dataSet[0].NAME).trigger(\"change\");\r\n                $(\".addEdit-inputHolder input[name=EMAIL]\").val(dataSet[0].EMAIL).attr(\"value\", dataSet[0].EMAIL).trigger(\"change\")\r\n                $(\".addEdit-inputHolder input[name=PASS]\").val(dataSet[0].PASS).attr(\"value\", dataSet[0].PASS).trigger(\"change\");;\r\n                $(\".addEdit-inputHolder input[name=SHR_MANAGER]\").val(dataSet[0].SHR_MANAGER).attr(\"value\", dataSet[0].SHR_MANAGER).trigger(\"change\");\r\n                $(\".addEdit-inputHolder input[name=SHR_SCHOLAR]\").val(dataSet[0].SHR_SCHOLAR).attr(\"value\", dataSet[0].SHR_SCHOLAR).trigger(\"change\");\r\n\r\n                // Timeout the function for update the value from hidden previous\r\n                setTimeout( () => {\r\n                    $(\".addEdit-inputHolder input[name=SHR_SPONSOR]\").val(dataSet[0].SHR_SPONSOR).attr(\"value\", dataSet[0].SHR_SPONSOR).trigger(\"change\");\r\n                    $(\".addEdit-inputHolder input[name=SPONSOR_NAME]\").val(dataSet[0].SPONSOR_NAME).attr(\"value\", dataSet[0].SPONSOR_NAME).trigger(\"change\");\r\n                }, 500);\r\n            } else {\r\n                this.setState({\r\n                    hasSponsor: false\r\n                })\r\n                // Clear data in input fields\r\n                $(\".addEdit-inputHolder input[name=ADDRESS]\").val(\"\").trigger(\"change\").removeAttr(\"disabled\");\r\n                $(\".addEdit-inputHolder input[name=NAME]\").val(\"\").trigger(\"change\");\r\n                $(\".addEdit-inputHolder input[name=EMAIL]\").val(\"\").trigger(\"change\");\r\n                $(\".addEdit-inputHolder input[name=PASS]\").val(\"\").trigger(\"change\");\r\n                $(\".addEdit-inputHolder input[name=SHR_MANAGER]\").val(\"\").trigger(\"change\");\r\n                $(\".addEdit-inputHolder input[name=SHR_SCHOLAR]\").val(\"\").trigger(\"change\");\r\n                $(\".addEdit-inputHolder input[name=SHR_SPONSOR]\").val(\"\").trigger(\"change\");\r\n                $(\".addEdit-inputHolder input[name=SPONSOR_NAME]\").val(\"\").trigger(\"change\");\r\n            }\r\n        } else {\r\n            this.setState({\r\n                hasSponsor: false\r\n            })\r\n            // Clear data in input fields\r\n            $(\".addEdit-inputHolder input[name=ADDRESS]\").val(\"\").trigger(\"change\").removeAttr(\"disabled\");\r\n            $(\".addEdit-inputHolder input[name=NAME]\").val(\"\").trigger(\"change\");\r\n            $(\".addEdit-inputHolder input[name=EMAIL]\").val(\"\").trigger(\"change\");\r\n            $(\".addEdit-inputHolder input[name=PASS]\").val(\"\").trigger(\"change\");\r\n            $(\".addEdit-inputHolder input[name=SHR_MANAGER]\").val(\"\").trigger(\"change\");\r\n            $(\".addEdit-inputHolder input[name=SHR_SCHOLAR]\").val(\"\").trigger(\"change\");\r\n            $(\".addEdit-inputHolder input[name=SHR_SPONSOR]\").val(\"\").trigger(\"change\");\r\n            $(\".addEdit-inputHolder input[name=SPONSOR_NAME]\").val(\"\").trigger(\"change\");\r\n        }\r\n    }\r\n\r\n    // Handle for saving record\r\n    onAddEditRecordHandle(event) {\r\n        event.preventDefault();\r\n        // Remove error message\r\n        this.setState({\r\n            isValidAddTeam: 0,\r\n            isLoaded: false,\r\n            isModalIskoInputsOpen: false // Close modal while processing\r\n        })\r\n\r\n        const shrManager = event.target.SHR_MANAGER.value ? event.target.SHR_MANAGER.value : \"0\";\r\n        const shrScholar = event.target.SHR_SCHOLAR.value ? event.target.SHR_SCHOLAR.value : \"0\";\r\n        const shrSponsor = event.target.SHR_SPONSOR ? event.target.SHR_SPONSOR.value ? event.target.SHR_SPONSOR.value : \"0\" : \"0\";\r\n        const shareTotal = Number(shrManager) + Number(shrScholar) + Number(shrSponsor);\r\n        const dateToday = momentToday.format(\"YYYY-MM-DD HH:mm:ss\");\r\n        if (shareTotal === 100) {\r\n            const sponsorName = Number(shrManager) + Number(shrScholar) === 100 ? \"\" : event.target.SPONSOR_NAME ? event.target.SPONSOR_NAME.value ? event.target.SPONSOR_NAME.value : \"\" : \"\";\r\n            // Continue with the process\r\n            const datas = {\r\n                ADDRESS: event.target.ADDRESS.value,\r\n                NAME: event.target.NAME.value,\r\n                EMAIL: event.target.EMAIL.value,\r\n                PASS: event.target.PASS.value,\r\n                SHR_MANAGER: shrManager,\r\n                SHR_SCHOLAR: shrScholar,\r\n                SHR_SPONSOR: shrSponsor,\r\n                SPONSOR_NAME: sponsorName,\r\n                STARTED_ON: dateToday,\r\n                DELETEIND: this.state.isDeleted ? \"X\" : \"\",\r\n                ACTION: this.state.slctAddEditId ? MESSAGE.UPDATE : MESSAGE.INSERT // Empty addEdit id from select will be insert\r\n            }\r\n\r\n            // Run Ajax\r\n            $.ajax({\r\n                url: \"/api/addEditScholar\",\r\n                type: \"POST\",\r\n                data: JSON.stringify(datas),\r\n                contentType: 'application/json',\r\n                cache: false,\r\n            }).then(\r\n                async (result) => {\r\n                    // Return\r\n                    if (!result.error) {\r\n                        // Sucess response x reload the page\r\n                        window.location.reload();\r\n                    } else {\r\n                        // Has error\r\n                        this.setState({\r\n                            isValidAddTeam: false,\r\n                            errorMsg: MESSAGE.UNEXPECTED_ERROR,\r\n                            isLoaded: true,\r\n                            isModalIskoInputsOpen: true // Open modal after processing with error\r\n                        })\r\n                    }\r\n                },\r\n                // Note: it's important to handle errors here\r\n                // instead of a catch() block so that we don't swallow\r\n                // exceptions from actual bugs in components.\r\n                (error) => {\r\n                    console.error(MESSAGE.ERROR_OCCURED, error)\r\n                    this.setState({\r\n                        isValidAddTeam: false,\r\n                        errorMsg: MESSAGE.UNEXPECTED_ERROR,\r\n                        isLoaded: true,\r\n                        isModalIskoInputsOpen: true // Open modal after processing with error\r\n                    })\r\n                }\r\n            )\r\n            .catch(\r\n                (err) => {\r\n                    console.error(MESSAGE.ERROR_OCCURED, err)\r\n                    this.setState({\r\n                        isValidAddTeam: false,\r\n                        errorMsg: MESSAGE.UNEXPECTED_ERROR,\r\n                        isLoaded: true,\r\n                        isModalIskoInputsOpen: true // Open modal after processing with error\r\n                    })\r\n                }\r\n            )\r\n        } else {\r\n            // Invalid total of Share\r\n            this.setState({\r\n                isValidAddTeam: false,\r\n                errorMsg: MESSAGE.SHARELIMIT,\r\n                isLoaded: true,\r\n                isModalIskoInputsOpen: true // Open modal after processing with error\r\n            })\r\n        }\r\n    }\r\n\r\n    // Handle for Select Change in Claim Tab\r\n    handleClaimChange(event) {\r\n        this.setState({\r\n            slctClaimId: event.target.value\r\n        })\r\n\r\n        // Update SLP Currency input value\r\n        $(\".claim-inputHolder input[name=SLPCURRENCY]\").val(this.state.currencySLP).attr(\"value\", this.state.currencySLP).trigger(\"change\");\r\n        // Continue with the process\r\n        if (event.target.value) {\r\n            const dataSet = this.state.playerRecords.filter(item => (item.ID).toString() === (event.target.value).toString() || item.NAME === event.target.value); // Filter valid data\r\n            if (dataSet.length > 0) {\r\n                // Update input fields\r\n                $(\".claim-inputHolder input[name=ADDRESS]\").val(dataSet[0].ADDRESS).attr(\"value\", dataSet[0].ADDRESS).trigger(\"change\").siblings('label').addClass('active');\r\n                $(\".claim-inputHolder input[name=SLPTOTAL]\").val(dataSet[0].SHAREDSLP).attr(\"value\", dataSet[0].SHAREDSLP).trigger(\"change\");\r\n                // Enable Button Submit\r\n                $(\".claim-inputHolder button\").removeAttr(\"disabled\");\r\n            } else {\r\n                // Clear data in input fields\r\n                $(\".claim-inputHolder input[name=ADDRESS]\").val(\"\").trigger(\"change\").siblings('label').removeClass('active');\r\n                $(\".claim-inputHolder input[name=SLPTOTAL]\").val(\"\").trigger(\"change\");\r\n                // Disabled Button Submit\r\n                $(\".claim-inputHolder button\").attr(\"disabled\", \"disabled\");\r\n            }\r\n        } else {\r\n            // Clear data in input fields\r\n            $(\".claim-inputHolder input[name=ADDRESS]\").val(\"\").trigger(\"change\");\r\n            $(\".claim-inputHolder input[name=SLPTOTAL]\").val(\"\").trigger(\"change\");\r\n            // Disabled Button Submit\r\n            $(\".claim-inputHolder button\").attr(\"disabled\", \"disabled\");\r\n        }\r\n    }\r\n\r\n    // Handle for saving withdraw slp\r\n    onWithdrawHandle(event) {\r\n        event.preventDefault();\r\n        // Remove error message\r\n        this.setState({\r\n            isValidWithdraw: 0,\r\n            isLoaded: false,\r\n            isModalIskoInputsOpen: false // Close modal while processing\r\n        })\r\n\r\n        const roninAddress = event.target.ADDRESS.value ? event.target.ADDRESS.value : \"\";\r\n        const slpTotal = event.target.SLPTOTAL.value ? event.target.SLPTOTAL.value : \"0\";\r\n        const slpCurrency = Number(event.target.SLPCURRENCY.value) && Number(event.target.SLPCURRENCY.value) !== 0 ? event.target.SLPCURRENCY.value : this.state.currencySLP;\r\n        const withdrawOn = event.target.WITHDRAW_ON.value ? moment(event.target.WITHDRAW_ON.value).format(\"YYYY-MM-DD HH:mm:ss\") : momentToday.format(\"YYYY-MM-DD HH:mm:ss\");\r\n        if ((Number(slpTotal) > 0) && roninAddress) {\r\n            // Continue with the process\r\n            const datas = {\r\n                ADDRESS: roninAddress,\r\n                SLPTOTAL: slpTotal,\r\n                SLPCURRENCY: slpCurrency,\r\n                WITHDRAW_ON: withdrawOn\r\n            }\r\n\r\n            // Run api\r\n            $.ajax({\r\n                url: \"/api/withdraw\",\r\n                type: \"POST\",\r\n                data: JSON.stringify(datas),\r\n                contentType: 'application/json',\r\n                cache: false,\r\n            }).then(\r\n                async (result) => {\r\n                    // Return\r\n                    if (!result.error) {\r\n                        // Sucess response x reload the page\r\n                        window.location.reload();\r\n                    } else {\r\n                        // Has error\r\n                        this.setState({\r\n                            isValidWithdraw: false,\r\n                            errorMsg: MESSAGE.UNEXPECTED_ERROR,\r\n                            isLoaded: true,\r\n                            isModalIskoInputsOpen: true // Open modal after processing with error\r\n                        })\r\n                    }\r\n                },\r\n                // Note: it's important to handle errors here\r\n                // instead of a catch() block so that we don't swallow\r\n                // exceptions from actual bugs in components.\r\n                (error) => {\r\n                    console.error(MESSAGE.ERROR_OCCURED, error)\r\n                    // Has error\r\n                    this.setState({\r\n                        isValidWithdraw: false,\r\n                        errorMsg: MESSAGE.UNEXPECTED_ERROR,\r\n                        isLoaded: true,\r\n                        isModalIskoInputsOpen: true // Open modal after processing with error\r\n                    })\r\n                }\r\n            )\r\n            .catch(\r\n                (err) => {\r\n                    console.error(MESSAGE.ERROR_OCCURED, err)\r\n                    // Has error\r\n                    this.setState({\r\n                        isValidWithdraw: false,\r\n                        errorMsg: MESSAGE.UNEXPECTED_ERROR,\r\n                        isLoaded: true,\r\n                        isModalIskoInputsOpen: true // Open modal after processing with error\r\n                    })\r\n                }\r\n            )\r\n        } else {\r\n            // Invalid data\r\n            this.setState({\r\n                isValidAddTeam: false,\r\n                errorMsg: MESSAGE.UNEXPECTED_ERROR,\r\n                isLoaded: true,\r\n                isModalIskoInputsOpen: true // Open modal after processing with error\r\n            })\r\n        }\r\n    }\r\n\r\n    // Handle for saving manager earnings\r\n    onManagerEarnedHandle(event) {\r\n        event.preventDefault();\r\n        // Remove error message\r\n        this.setState({\r\n            isValidManagerEarn: 0,\r\n            isLoaded: false,\r\n            isModalIskoInputsOpen: false // Close modal while processing\r\n        })\r\n\r\n        const slpTotal = event.target.SLPTOTAL.value ? event.target.SLPTOTAL.value : \"0\";\r\n        const slpCurrency = Number(event.target.SLPCURRENCY.value) && Number(event.target.SLPCURRENCY.value) !== 0 ? event.target.SLPCURRENCY.value : this.state.currencySLP;\r\n        const category = $(\".managerEarn-inputHolder\").find(\"select option:selected\").text();\r\n        const earnedOn = event.target.EARNED_ON.value ? moment(event.target.EARNED_ON.value).format(\"YYYY-MM-DD HH:mm:ss\") : momentToday.format(\"YYYY-MM-DD HH:mm:ss\");\r\n        if (Number(slpTotal) > 0 && Number(slpCurrency) > 0 && category) {\r\n            // Continue with the process\r\n            const datas = {\r\n                SLPTOTAL: slpTotal,\r\n                SLPCURRENCY: slpCurrency,\r\n                CATEGORY: category,\r\n                EARNED_ON: earnedOn\r\n            }\r\n                \r\n            // Run api\r\n            $.ajax({\r\n                url: \"/api/managerEarned\",\r\n                type: \"POST\",\r\n                data: JSON.stringify(datas),\r\n                contentType: 'application/json',\r\n                cache: false,\r\n            }).then(\r\n                async (result) => {\r\n                    // Return\r\n                    if (!result.error) {\r\n                        // Sucess response x reload the page\r\n                        window.location.reload();\r\n                    } else {\r\n                        // Has error\r\n                        this.setState({\r\n                            isValidManagerEarn: false,\r\n                            errorMsg: MESSAGE.UNEXPECTED_ERROR,\r\n                            isLoaded: true,\r\n                            isModalIskoInputsOpen: true // Open modal after processing with error\r\n                        })\r\n                    }\r\n                },\r\n                // Note: it's important to handle errors here\r\n                // instead of a catch() block so that we don't swallow\r\n                // exceptions from actual bugs in components.\r\n                (error) => {\r\n                    console.error(MESSAGE.ERROR_OCCURED, error)\r\n                    // Has error\r\n                    this.setState({\r\n                        isValidManagerEarn: false,\r\n                        errorMsg: MESSAGE.UNEXPECTED_ERROR,\r\n                        isLoaded: true,\r\n                        isModalIskoInputsOpen: true // Open modal after processing with error\r\n                    })\r\n                }\r\n            )\r\n            .catch(\r\n                (err) => {\r\n                    console.error(MESSAGE.ERROR_OCCURED, err)\r\n                    // Has error\r\n                    this.setState({\r\n                        isValidManagerEarn: false,\r\n                        errorMsg: MESSAGE.UNEXPECTED_ERROR,\r\n                        isLoaded: true,\r\n                        isModalIskoInputsOpen: true // Open modal after processing with error\r\n                    })\r\n                }\r\n            )\r\n        } else {\r\n            // Invalid data\r\n            this.setState({\r\n                isValidAddTeam: false,\r\n                errorMsg: MESSAGE.UNEXPECTED_ERROR,\r\n                isLoaded: true,\r\n                isModalIskoInputsOpen: true // Open modal after processing with error\r\n            })\r\n        }\r\n    }\r\n\r\n    // Get SLP and AXS Crypto Coins\r\n    getCryptoCoins = () => {\r\n        $.ajax({\r\n            url: \"/api/getCryptoCoins\",\r\n            dataType: \"json\",\r\n            cache: false\r\n        })\r\n        .then(\r\n            (result) => {\r\n                if (result.error) {\r\n                    // Has Error x Set the default value of SLP and AXS into 0 x error in fetching data from third party api\r\n                    this.setState({\r\n                        currencySLP: 0,\r\n                        currencyAXS: 0\r\n                    })\r\n                } else {\r\n                    // Success fetch Crypto Coins\r\n                    this.setState({\r\n                        currencyNAME: result.data.NAME,\r\n                        currencySLP: result.data.SLP,\r\n                        currencyAXS: result.data.AXS,\r\n                        currencyURI: result.data.URI\r\n                    })\r\n                }\r\n            },\r\n            // Note: it's important to handle errors here\r\n            // instead of a catch() block so that we don't swallow\r\n            // exceptions from actual bugs in components.\r\n            (error) => {\r\n                console.error(MESSAGE.ERROR_OCCURED, error)\r\n                // Set the default value of SLP and AXS into 0 x error in fetching data from third party api\r\n                this.setState({\r\n                    currencySLP: 0,\r\n                    currencyAXS: 0\r\n                })\r\n            }\r\n        )\r\n        .catch(\r\n            (err) => {\r\n                console.error(MESSAGE.ERROR_OCCURED, err)\r\n                // Set the default value of SLP and AXS into 0 x error in fetching data from third party api\r\n                this.setState({\r\n                    currencySLP: 0,\r\n                    currencyAXS: 0\r\n                })\r\n            }\r\n        )\r\n    }\r\n\r\n    // Get Access Token\r\n    authLogin = async (credentials) => {\r\n        return new Promise((resolve, reject) => {\r\n            // Run api\r\n            $.ajax({\r\n                url: \"/api/authLogin\",\r\n                type: \"POST\",\r\n                data: JSON.stringify(credentials),\r\n                contentType: 'application/json',\r\n                cache: false,\r\n            }).then(\r\n                async (result) => {\r\n                    if (result.error) {\r\n                        // Has Error\r\n                        return reject({error: true, category: \"authLogin\"});\r\n                    } else {\r\n                        // Success Generate Access Token\r\n                        try {\r\n                            const data = result.data !== undefined && Object.keys(result.data).length > 0 ? result.data : false;\r\n                            const token = data.accessToken ? data.accessToken : false;\r\n                            if (token) {\r\n                                return resolve({error: false, token: token});\r\n                            } else {\r\n                                return reject({error: true, category: \"authLogin\"});\r\n                            }\r\n                        } catch (error) {\r\n                            // Has Error in parsing\r\n                            return reject({error: true, data: error, category: \"authLogin\"});\r\n                        }\r\n                    }\r\n                },\r\n                // Note: it's important to handle errors here\r\n                // instead of a catch() block so that we don't swallow\r\n                // exceptions from actual bugs in components.\r\n                (error) => {\r\n                    console.error(MESSAGE.ERROR_OCCURED, error)\r\n                    return reject({error: true, data: error, category: \"authLogin\"});\r\n                }\r\n            )\r\n            .catch(\r\n                (err) => {\r\n                    console.error(MESSAGE.ERROR_OCCURED, err)\r\n                    return reject({error: true, data: err, category: \"authLogin\"});\r\n                }\r\n            )\r\n        }).catch(err => {\r\n            console.error(MESSAGE.ERROR_OCCURED, err)\r\n            return err;\r\n        });\r\n    }\r\n\r\n    // Process of details by fetching all data in different api\r\n    recordProcess = () => {\r\n        $.ajax({\r\n            url: \"/api/records\",\r\n            type: \"GET\",\r\n            contentType: 'application/json',\r\n            cache: false,\r\n        })\r\n        .then(\r\n            async (response) => {\r\n                let counter = 0; // For checking of valid process counting\r\n                const dataRecords = response.data;\r\n                const dataWithdraw = response.withdraw;\r\n                const dataManagerEarned = response.managerEarned;\r\n                // const dataYesterdaySLP = response.yesterdaySLP;\r\n                console.log(\"getRecord\", response)\r\n                if (dataRecords.length > 0) {\r\n                    // Fetch player details in api of sky mavis\r\n                    const dataResultPromise = dataRecords.map(async (item) => {\r\n                        const EMAIL = item.EMAIL ? item.EMAIL : false;\r\n                        const PASS = item.PASS ? item.PASS.length > 1 ? item.PASS : false : false;\r\n                        const isDeleted = item.DELETEIND ? item.DELETEIND : \"\";\r\n\r\n                        counter = counter + 1;\r\n                        // console.log(MESSAGE.PROCESS_COUNT, `${counter} / ${dataRecords.length}`); // For checking of valid process counting\r\n\r\n                        // Continue process\r\n                        let userEthAddress = null;\r\n                        const ethAddress = item.ADDRESS ? `0x${item.ADDRESS.substring(6)}` : \"\";\r\n                        const isSponsorName = item.SPONSOR_NAME ? item.SPONSOR_NAME.toLowerCase() : \"\"\r\n\r\n                        // Set Array of Sponsors\r\n                        if (isSponsorName) {\r\n                            this.state.arrSponsorName.push(isSponsorName);\r\n                        }\r\n\r\n                        // Set ETH Address and Sponsor Name\r\n                        if (item.EMAIL.toLowerCase() === this.state.isUser.toLowerCase() ||\r\n                            item.NAME.toLowerCase() === this.state.isUser.toLowerCase() ||\r\n                            isSponsorName === this.state.isUser.toLowerCase()) {\r\n                                // Get ETH Address based on Credential\r\n                                userEthAddress = ethAddress;\r\n                                if (item.SHR_SPONSOR !== \"\" && item.SHR_SPONSOR !== \"0\" && item.SHR_SPONSOR !== undefined) {\r\n                                    // Set valid Sponsor Name\r\n                                    this.setState({\r\n                                        isSponsorName: this.state.isUser\r\n                                    })\r\n                                }\r\n                        }\r\n\r\n                        if (isDeleted || (!EMAIL || !PASS)) { // To prevent fetching access token and processing for delete details\r\n                            // Details is mark as deleted and No valid credentials\r\n                            // Continue Process for Player Details with Default/Empty data of InGame SLP\r\n                            item[\"accessToken\"] = false; // Update the Access Token property value to empty for resetting in generate token\r\n                            return await this.processPlayerDetails(_INGAMESLP, counter, item, ethAddress, userEthAddress, dataWithdraw, dataManagerEarned);\r\n\r\n                        } else {\r\n                            // Get Previous data from Local Storage\r\n                            const detailLocalStored = localStorage.getItem(ethAddress) !== null ? JSON.parse(localStorage.getItem(ethAddress)) : false;\r\n\r\n                            // Process for Generate Access Token\r\n                            let accessToken = detailLocalStored && detailLocalStored.accessToken ? detailLocalStored.accessToken : false;\r\n                            if (accessToken) {\r\n                                // Has already Access Token x Reassigned existing data from Local Storage\r\n                                item = detailLocalStored;\r\n\r\n                            } else { // No Access Token x Not available in Local Storage\r\n                                // Generate Access Token\r\n                                console.log(`${MESSAGE.RUN_TOKEN}:`, item.NAME);\r\n                                accessToken = await this.authLogin({email: item.EMAIL, password: item.PASS});\r\n                                if (!accessToken.error) {\r\n                                    // Set for Access Token\r\n                                    item[\"accessToken\"] = accessToken.token;\r\n                                } else {\r\n                                    // No Access Token x Don't display the player detail\r\n                                    accessToken = false;\r\n                                }\r\n                            }\r\n\r\n                            if (accessToken) { // Has Access Token\r\n                                // Return valid details\r\n                                return await this.getPlayerDetails(item, counter, ethAddress, userEthAddress, dataWithdraw, dataManagerEarned);\r\n                                // return item;\r\n                            } else {\r\n                                // End the process x No Access Token\r\n                                return false;\r\n                            }\r\n                        }\r\n                    });\r\n\r\n                    await Promise.all(dataResultPromise).then(async (results) => {\r\n                        let initDisplay = []; // Data for initial display\r\n                        let leaderboardDisplay = []; // Data for players leaderboard list display in Modal\r\n\r\n                        const dataResult = results.filter(item => item && !item.error && item.data !== undefined && item.eth !== undefined); // Filter valid data\r\n                        if (dataResult && dataResult.length > 0) {\r\n                            // Sort as Top Leaderboard\r\n                            dataResult.sort(function (a, b) {\r\n                                if (a.topRank === b.topRank) { // equal items sort equally\r\n                                    return 0;\r\n                                } else if (a.topRank === 0) { // 0 sort after anything else\r\n                                    return 1;\r\n                                } else if (b.topRank === 0) { // 0 sort after anything else\r\n                                    return -1;\r\n                                } else {  // otherwise, if we're ascending, lowest sorts first\r\n                                    return a.topRank < b.topRank ? -1 : 1;\r\n                                }\r\n                              }).map((dataItem, index) => {\r\n                                const indexCount = index + 1; // Global index count\r\n                                dataItem.data.order = indexCount; // Adding ordered number\r\n\r\n                                // Get Top MMR Player\r\n                                if (indexCount === 1) {\r\n                                    this.setState({\r\n                                        topUserRank: dataItem.nameTopRank ? dataItem.nameTopRank : \"\"\r\n                                    })\r\n                                }\r\n\r\n                                // Update Name with combination of index counter x for display in data table x display for next page\r\n                                if (indexCount > 5) {\r\n                                    dataItem.data.nameSub = indexCount + \". \" + dataItem.data.name;\r\n                                }\r\n    \r\n                                // Display data\r\n                                if (this.state.isUser === MESSAGE.MANAGER || this.state.isUserEmail) {\r\n                                    if (!dataItem.isDelete) { // Display not deleted player\r\n                                        initDisplay.push(dataItem.data); // Data for initial display x display all\r\n                                    }\r\n                                } else {\r\n                                    if (dataItem.eth !== null) {\r\n                                        initDisplay.push(dataItem.data); // Data for initial display x specific data to be display\r\n                                    }\r\n                                }\r\n\r\n                                // Data for players MMR list display in Modal x Pushed specific data\r\n                                if (!dataItem.isDelete) { // Display not deleted player\r\n                                    leaderboardDisplay.push({\r\n                                        order: dataItem.data.order,\r\n                                        name: dataItem.data.name,\r\n                                        rank: dataItem.data.rank,\r\n                                        topRank: dataItem.data.topRank\r\n                                    });\r\n                                }\r\n    \r\n                                // Return\r\n                                return true;\r\n                            });\r\n\r\n                            // Sort as Top SLP Gainer\r\n                            dataResult.sort((a, b) =>  b.inGameSLP - a.inGameSLP ).map((dataItem, index) => {\r\n                                dataItem.data.order = index + 1; // Adding ordered number\r\n    \r\n                                // Get Top InGame SLP Player\r\n                                if (dataItem.data.order === 1) {\r\n                                    this.setState({\r\n                                        topUserInGameSLP: dataItem.nameTopInGameSLP ? dataItem.nameTopInGameSLP : \"\"\r\n                                    })\r\n                                }\r\n    \r\n                                // Return\r\n                                return true;\r\n                            });\r\n\r\n                            // Adding body document if the playerDataTableis single data x initDisplay\r\n                            if (initDisplay.length <= 1) {\r\n                                document.body.classList.add('single-player-datatable-handler');\r\n                            }\r\n\r\n                            // Default Columns for Player Datatable\r\n                            let playerDataTableColums = [\r\n                                {label: MESSAGE.NAME, field: \"nameSub\"},\r\n                                {label: MESSAGE.INGAME_SLP, field: \"inGameSLP\"},\r\n                                {label: MESSAGE.MINT_SLP, field: \"mintSLP\"},\r\n                                {label: MESSAGE.SHARED_SLP, field: \"shareSLP\"},\r\n                                {label: MESSAGE.RONIN_SLP, field: \"roninSLP\"},\r\n                                {label: MESSAGE.TOTAL_SLP_PHP, field: \"totalEarningPHPSLP\"},\r\n                                {label: MESSAGE.LEADERBOARD, field: \"leaderboard\"}\r\n                            ];\r\n\r\n                            // Return data x Set state\r\n                            this.setState({\r\n                                error: false,\r\n                                isLoaded: true,\r\n                                isPlayerLoaded: true,\r\n                                playerDataTable: {\r\n                                    columns: playerDataTableColums,\r\n                                    rows: initDisplay\r\n                                },\r\n                                leaderboardDatatable: {\r\n                                    columns: [\r\n                                        {label: \"\", field: \"order\"},\r\n                                        {label: MESSAGE.NAME, field: \"name\"},\r\n                                        {label: MESSAGE.RANK, field: \"rank\"},\r\n                                        {label: MESSAGE.LEADERBOARD, field: \"topRank\", sort: \"desc\"}\r\n                                    ], rows: leaderboardDisplay\r\n                                },\r\n                            })\r\n    \r\n                            console.log(\"playerRecords\", this.state.playerRecords)\r\n                        } else {\r\n                            // No data found\r\n                            this.setState({\r\n                                isLoaded: true,\r\n                                notifStr: MESSAGE.NODATA_FOUND,\r\n                                error: true\r\n                            })\r\n                        }\r\n                    })\r\n                } else {\r\n                    // No data found\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        error: true\r\n                    })\r\n                }\r\n            },\r\n            // Note: it's important to handle errors here\r\n            // instead of a catch() block so that we don't swallow\r\n            // exceptions from actual bugs in components.\r\n            (error) => {\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    error: true\r\n                })\r\n                    \r\n                console.error(MESSAGE.ERROR_OCCURED, error)\r\n            }\r\n        )\r\n        .catch(\r\n            (err) => {\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    error: true\r\n                })\r\n                    \r\n                console.error(MESSAGE.ERROR_OCCURED, err)\r\n            }\r\n        )\r\n    }\r\n\r\n    // Get Player details base on Sky Mavis API\r\n    getPlayerDetails = async (details, detailsLength, ethAddress, userEthAddress, dataWithdraw, dataManagerEarned) => {\r\n        return new Promise((resolve, reject) => {\r\n            $.ajax({\r\n                url: \"/api/getInGameSLP\",\r\n                type: \"POST\",\r\n                data: JSON.stringify({\r\n                    token: details.accessToken\r\n                }),\r\n                contentType: 'application/json',\r\n                cache: false\r\n            })\r\n            .then(\r\n                async (result) => {\r\n                    if (!result.error && Object.keys(result.data).length > 0) { // Has player details\r\n                        try {\r\n                            // Process the player details for display\r\n                            const dataRes = result.data ? JSON.parse(result.data) : false;\r\n                            const detailProcess = await this.processPlayerDetails(dataRes, detailsLength, details, ethAddress, userEthAddress, dataWithdraw, dataManagerEarned);\r\n                            return resolve(detailProcess);\r\n                        } catch {\r\n                            // Continue Process for Player Details with Default/Empty data of InGame SLP\r\n                            details.accessToken = false; // Update the Access Token property value to empty for resetting in generate token\r\n                            const detailsReturn = Object.assign({}, details);\r\n                            const detailProcess = await this.processPlayerDetails(_INGAMESLP, detailsLength, detailsReturn, ethAddress, userEthAddress, dataWithdraw, dataManagerEarned);\r\n                            return resolve(detailProcess);\r\n                        }\r\n                    } else {\r\n                        // Continue Process for Player Details with Default/Empty data of InGame SLP\r\n                        details.accessToken = false; // Update the Access Token property value to empty for resetting in generate token\r\n                        const detailsReturn = Object.assign({}, details);\r\n                        const detailProcess = await this.processPlayerDetails(_INGAMESLP, detailsLength, detailsReturn, ethAddress, userEthAddress, dataWithdraw, dataManagerEarned);\r\n                        return resolve(detailProcess);\r\n                    }\r\n                },\r\n                // Note: it's important to handle errors here\r\n                // instead of a catch() block so that we don't swallow\r\n                // exceptions from actual bugs in components.\r\n                async (error) => {\r\n                    // Get Cookies data based on eth address\r\n                    const detailLocalStored = localStorage.getItem(ethAddress) !== null ? localStorage.getItem(ethAddress) : false;\r\n                    if (detailLocalStored) {\r\n                        const dataRes = JSON.parse(detailLocalStored); // Parse the Cookie\r\n                        if (Object.keys(dataRes).length > 0) { // Has player details\r\n                            details.accessToken = false; // Update the Access Token property value to empty for resetting in generate token\r\n                            const detailsReturn = Object.assign({}, details);\r\n                            // Process data from Local Storage\r\n                            const detailProcess = await this.processPlayerDetails(dataRes, detailsLength, detailsReturn, ethAddress, userEthAddress, dataWithdraw, dataManagerEarned, true);\r\n                            return resolve(detailProcess);\r\n                        } else {\r\n                            // Continue Process for Player Details with Default/Empty data of InGame SLP\r\n                            const detailProcess = await this.processPlayerDetails(_INGAMESLP, detailsLength, details, ethAddress, userEthAddress, dataWithdraw, dataManagerEarned);\r\n                            return resolve(detailProcess);\r\n                        }\r\n                    } else {\r\n                        console.error(MESSAGE.ERROR_OCCURED, error)\r\n                        // Continue Process for Player Details with Default/Empty data of InGame SLP\r\n                        const detailProcess = await this.processPlayerDetails(_INGAMESLP, detailsLength, details, ethAddress, userEthAddress, dataWithdraw, dataManagerEarned);\r\n                        return resolve(detailProcess);\r\n                    }\r\n                }\r\n            )\r\n            .catch(\r\n                async (err) => {\r\n                    const detailLocalStored = localStorage.getItem(ethAddress) !== null ? localStorage.getItem(ethAddress) : false;\r\n                    if (detailLocalStored) {\r\n                        const dataRes = JSON.parse(detailLocalStored); // Parse the Cookie\r\n                        if (Object.keys(dataRes).length > 0) { // Has player details\r\n                            details.accessToken = false; // Update the Access Token property value to empty for resetting in generate token\r\n                            const detailsReturn = Object.assign({}, details);\r\n                            // Process data from Local Storage\r\n                            const detailProcess = await this.processPlayerDetails(dataRes, detailsLength, detailsReturn, ethAddress, userEthAddress, dataWithdraw, dataManagerEarned, true);\r\n                            return resolve(detailProcess);\r\n                        } else {\r\n                            // Continue Process for Player Details with Default/Empty data of InGame SLP\r\n                            const detailProcess = await this.processPlayerDetails(_INGAMESLP, detailsLength, details, ethAddress, userEthAddress, dataWithdraw, dataManagerEarned);\r\n                            return resolve(detailProcess);\r\n                        }\r\n                    } else {\r\n                        console.error(MESSAGE.ERROR_OCCURED, err)\r\n                        // Continue Process for Player Details with Default/Empty data of InGame SLP\r\n                        const detailProcess = await this.processPlayerDetails(_INGAMESLP, detailsLength, details, ethAddress, userEthAddress, dataWithdraw, dataManagerEarned);\r\n                        return resolve(detailProcess);\r\n                    }\r\n                }\r\n            )\r\n        }).catch(err => {\r\n            console.error(MESSAGE.ERROR_OCCURED, err)\r\n            return err;\r\n        });\r\n    }\r\n\r\n    // Process for Player Details result\r\n    processPlayerDetails = async (INGAME, detailsLength, details, ethAddress, userEthAddress, dataWithdraw, dataManagerEarned, isBasedCookie = false) => {\r\n        return new Promise(async (resolve, reject) => {\r\n            if (Object.keys(INGAME).length > 0) { // Has player details\r\n                // Fetch Player Wallet\r\n                let WALLET = await this.getPlayerWallet(details);\r\n                if (WALLET.error) {\r\n                    // Set default object value x Get Previous Data from Local Storage\r\n                    WALLET = details.WALLET && Object.keys(details.WALLET).length > 0 ? details.WALLET : {\r\n                        slp: 0,\r\n                        axs: 0,\r\n                        ron: 0\r\n                    }\r\n                }\r\n\r\n                // Fetch Player Leaderboard\r\n                let LEADERBOARD = await this.getPlayerLeaderboard(details);\r\n                if (LEADERBOARD.error) {\r\n                    // Set default object value x Get Previous Data from Local Storage\r\n                    LEADERBOARD = details.LEADERBOARD && Object.keys(details.LEADERBOARD).length > 0 ? details.LEADERBOARD : {\r\n                        rank: \"\",\r\n                        tier: 0,\r\n                        topRank: 0,\r\n                        vstar: 0\r\n                    }\r\n                }\r\n\r\n                // Fetch Player Items (Active Runes)\r\n\r\n                // Construct data for getting the correct computation of SLP and Balance\r\n                if ((details.SHR_MANAGER).toString() === \"100\" || details.SHR_MANAGER === 100) {\r\n                    // Set Manager Shared SLP\r\n                    const managerShare = (details.SHR_MANAGER).toString() === \"100\" ? 1 : \"0.\" + details.SHR_MANAGER;\r\n                    details.SHAREDSLP = Math.ceil(INGAME.withdrawable * managerShare);\r\n\r\n                    // Set Total Manager Shared SLP\r\n                    this.setState({\r\n                        totalManagerClaimableSLP: this.state.totalManagerClaimableSLP + details.SHAREDSLP + Number(WALLET.slp),\r\n                        totalManagerSLP: this.state.totalManagerSLP + details.SHAREDSLP\r\n                    })\r\n                } else {\r\n                    let totalSponsorSLPRes = 0;\r\n                    // Set Shared Scholar/Sponsor SLP\r\n                    if ((details.SHR_SPONSOR).toString() !== \"0\" || details.SHR_SPONSOR > 0) {\r\n                        // Sponsor SLP\r\n                        const sponsorShare = \"0.\" + details.SHR_SPONSOR;\r\n                        details.SHAREDSLP = Math.floor(INGAME.withdrawable * sponsorShare);\r\n\r\n                        // Set Total Sponsor Shared SLP\r\n                        totalSponsorSLPRes = this.state.totalSponsorSLP + details.SHAREDSLP;\r\n                        this.setState({\r\n                            totalSponsorSLP: totalSponsorSLPRes\r\n                        })\r\n                    } else {\r\n                        // Scholar SLP\r\n                        const iskoShare = (details.SHR_SCHOLAR).toString() === \"100\" ? 1 : \"0.\" + details.SHR_SCHOLAR;\r\n                        details.SHAREDSLP = Math.floor(INGAME.withdrawable * iskoShare);\r\n\r\n                        // Set Total Scholar Shared SLP\r\n                        this.setState({\r\n                            totalScholarSLP: this.state.totalScholarSLP + details.SHAREDSLP\r\n                        })\r\n                    }\r\n\r\n                    // Set Total Manager Shared SLP\r\n                    const managerShare = \"0.\" + details.SHR_MANAGER;\r\n                    this.setState({\r\n                        totalManagerClaimableSLP: this.state.totalManagerClaimableSLP + details.SHAREDSLP,\r\n                        totalManagerSLP: this.state.totalManagerSLP + Math.ceil(INGAME.withdrawable * managerShare)\r\n                    })\r\n\r\n                    // Set Total Sponsor Shared SLP with Ronin of Sponsor\r\n                    if (this.state.arrSponsorName.includes((details.NAME).toLowerCase())) {\r\n                        this.setState({\r\n                            totalSponsorSLP: totalSponsorSLPRes + Number(WALLET.slp)\r\n                        })\r\n                    }\r\n                }\r\n\r\n                // Construct data for Manager All Income and Set value for Total Earning per claimed\r\n                if ((details.SHR_MANAGER).toString() === \"100\" && (dataManagerEarned !== undefined && dataManagerEarned.length > 0)) {\r\n                    details.MANAGEREARNING = { // Default Total Value\r\n                        TOTAL: {\r\n                            ROI: 0,\r\n                            INCOME: 0,\r\n                            BREED: 0,\r\n                            BUY: 0,\r\n                            SLP: 0,\r\n                            PHP: 0\r\n                        },\r\n                        CLAIMED: [],\r\n                        REACHEDROI: false, // For validation if ROI is completed\r\n                    };\r\n\r\n                    dataManagerEarned.map(data => {\r\n                        // Adding PHP Earning\r\n                        data.PHPTOTAL = Number(data.SLPTOTAL) * Number(data.SLPCURRENCY);\r\n                        // Update Total Income and SLP\r\n                        details.MANAGEREARNING.TOTAL.SLP = Number(details.MANAGEREARNING.TOTAL.SLP) + Number(data.SLPTOTAL);\r\n                        details.MANAGEREARNING.TOTAL.PHP = Number(details.MANAGEREARNING.TOTAL.PHP) + Number(data.PHPTOTAL);\r\n\r\n                        if (data.CATEGORY && (data.CATEGORY.toLowerCase()) === \"withdraw\") {\r\n                            if (!details.MANAGEREARNING.REACHEDROI) {\r\n                                // Adding Return of Investment\r\n                                details.MANAGEREARNING.TOTAL.ROI = Number(details.MANAGEREARNING.TOTAL.ROI) + Number(data.PHPTOTAL);\r\n\r\n                                // Reached the ROI\r\n                                if (Number(details.MANAGEREARNING.TOTAL.ROI) >= Number(this.state.managerPHPInvestment)) {\r\n                                    details.MANAGEREARNING.REACHEDROI = true;\r\n                                }\r\n                            } else {\r\n                                // Adding total of Income\r\n                                details.MANAGEREARNING.TOTAL.INCOME = Number(details.MANAGEREARNING.TOTAL.INCOME) + Number(data.PHPTOTAL);\r\n                            }\r\n                        }\r\n\r\n                        if (data.CATEGORY && (data.CATEGORY.toLowerCase()) === \"breed\") {\r\n                            // Adding total cost for breeding\r\n                            details.MANAGEREARNING.TOTAL.BREED = Number(details.MANAGEREARNING.TOTAL.BREED) + Number(data.PHPTOTAL);\r\n                        }\r\n\r\n                        if (data.CATEGORY && (data.CATEGORY.toLowerCase()) === \"buy\") {\r\n                            // Adding total cost for buying axie\r\n                            details.MANAGEREARNING.TOTAL.BUY = Number(details.MANAGEREARNING.TOTAL.BUY) + Number(data.PHPTOTAL);\r\n                        }\r\n\r\n                        // Push data\r\n                        let managerData = Object.assign({}, data);\r\n                        details.MANAGEREARNING.CLAIMED.push(managerData);\r\n\r\n                        // Return\r\n                        return true;\r\n                    })\r\n\r\n                    // Update Data for Manager All Earning\r\n                    this.setState({\r\n                        managerEarnings: details.MANAGEREARNING\r\n                    })\r\n                }\r\n\r\n                // Set new value for Team Total Income and Total Earning per withdraw\r\n                if (dataWithdraw !== undefined && dataWithdraw.length > 0) {\r\n                    details.WITHDRAWEARNING = { // Default Total Value\r\n                        TOTALINCOME: 0,\r\n                        CLAIMED: []\r\n                    }\r\n                    // Get specific data based on ronin address in dataWithdraw\r\n                    dataWithdraw.filter(item => item.ADDRESS === details.ADDRESS).map(data => {\r\n                        // Adding PHP Earning\r\n                        data.PHPTOTAL = Number(data.SLPTOTAL) * Number(data.SLPCURRENCY);\r\n\r\n                        // Update Total Income\r\n                        details.WITHDRAWEARNING.TOTALINCOME = details.WITHDRAWEARNING.TOTALINCOME + data.PHPTOTAL;\r\n\r\n                        // Push data\r\n                        let withdrawData = Object.assign({}, data);\r\n                        details.WITHDRAWEARNING.CLAIMED.push(withdrawData);\r\n\r\n                        // Return\r\n                        return true;\r\n\r\n                    });\r\n                }\r\n\r\n                // Set Total InGame SLP x Average InGame SLP\r\n                const totalIngameSLPRes = this.state.totalInGameSLP + INGAME.quantity;\r\n                this.setState({\r\n                    totalInGameSLP: totalIngameSLPRes,\r\n                    totalAverageInGameSLP: Number(totalIngameSLPRes) / Number(detailsLength)\r\n                })\r\n\r\n                // Set Total Earnings\r\n                details.TOTALEARNING_SLP = Number(details.SHAREDSLP) + Number(WALLET.slp);\r\n                details.TOTALEARNING_PHP = details.TOTALEARNING_SLP * this.state.currencySLP // Ccomputed base on TOTALEARNING_SLP multiply currencySLP\r\n                \r\n                // Reassigned Object\r\n                details.INGAME = INGAME; // Insert InGame Result in Details\r\n                details.WALLET = WALLET; // Insert Wallet Result in Details\r\n                details.LEADERBOARD = LEADERBOARD; // Insert Leaderboard Result in Details\r\n                const PLAYER = Object.assign({}, details);\r\n\r\n                // Set State Object of Player Details\r\n                this.state.playerRecords.push(PLAYER);\r\n\r\n                // Set Player Details in LocalStorage\r\n                localStorage.setItem(ethAddress, JSON.stringify(PLAYER));\r\n\r\n                // Construct date for dispay details\r\n                const playerDataTableRes = {\r\n                    name: PLAYER.NAME,\r\n                    nameSub: PLAYER.NAME,\r\n                    inGameSLP: <MDBBox data-th={MESSAGE.INGAME_SLP} tag=\"span\">{this.numberWithCommas(PLAYER.INGAME.quantity)}</MDBBox>,\r\n                    mintSLP: <MDBBox data-th={MESSAGE.MINT_SLP} tag=\"span\">\r\n                                    {\r\n                                        this.state.isUser === MESSAGE.MANAGER || !this.state.isUserEmail || (this.state.isUser).toLowerCase() === (PLAYER.EMAIL).toLowerCase() ? (\r\n                                            this.numberWithCommas(PLAYER.INGAME.withdrawable)\r\n                                        ) : (0) // If user is email x display 0 for other player\r\n                                    }\r\n                                </MDBBox>,\r\n                    shareSLP: <MDBBox data-th={MESSAGE.SHARED_SLP} tag=\"span\" className=\"d-inline d-md-block d-lg-block\">\r\n                                    {\r\n                                        this.state.isUser === MESSAGE.MANAGER || !this.state.isUserEmail || (this.state.isUser).toLowerCase() === (PLAYER.EMAIL).toLowerCase() ? (\r\n                                            <React.Fragment>\r\n                                                {this.numberWithCommas(PLAYER.SHAREDSLP)}\r\n                                                <MDBBox tag=\"span\" className=\"d-inline d-md-block d-lg-block\">\r\n                                                    ({(PLAYER.SHR_MANAGER).toString() === \"100\" ? PLAYER.SHR_MANAGER : PLAYER.SHR_SCHOLAR}%)\r\n                                                </MDBBox>\r\n                                            </React.Fragment>\r\n                                        ) : (0) // If user is email x display 0 for other player\r\n                                    }\r\n                                </MDBBox>,\r\n                    roninSLP: <MDBBox data-th={MESSAGE.RONIN_SLP} tag=\"span\">\r\n                                    {\r\n                                        this.state.isUser === MESSAGE.MANAGER || !this.state.isUserEmail || (this.state.isUser).toLowerCase() === (PLAYER.EMAIL).toLowerCase() ? (\r\n                                            this.numberWithCommas(PLAYER.WALLET.slp)\r\n                                        ) : (0) // If user is email x display 0 for other player\r\n                                    }\r\n                                </MDBBox>,\r\n                    totalEarningSLP: <MDBBox data-th={MESSAGE.TOTAL_SLP} tag=\"span\">\r\n                                        {\r\n                                            this.state.isUser === MESSAGE.MANAGER || !this.state.isUserEmail || (this.state.isUser).toLowerCase() === (PLAYER.EMAIL).toLowerCase() ? (\r\n                                                this.numberWithCommas(PLAYER.TOTALEARNING_SLP)\r\n                                            ) : (0) // If user is email x display 0 for other player\r\n                                        }\r\n                                    </MDBBox>,\r\n                    totalEarningPHP: <MDBBox data-th={MESSAGE.EARNINGS_PHP} tag=\"span\">\r\n                                        {\r\n                                            this.state.isUser === MESSAGE.MANAGER || !this.state.isUserEmail || (this.state.isUser).toLowerCase() === (PLAYER.EMAIL).toLowerCase() ? (\r\n                                                this.numberWithCommas((PLAYER.TOTALEARNING_PHP).toFixed(2))\r\n                                            ) : (0) // If user is email x display 0 for other player\r\n                                        }\r\n                                    </MDBBox>,\r\n                    totalEarningPHPSLP: <MDBBox data-th={MESSAGE.TOTAL_SLP_PHP} tag=\"span\">\r\n                                            {\r\n                                                this.state.isUser === MESSAGE.MANAGER || !this.state.isUserEmail || (this.state.isUser).toLowerCase() === (PLAYER.EMAIL).toLowerCase() ? (\r\n                                                    <React.Fragment>\r\n                                                        {this.numberWithCommas(PLAYER.TOTALEARNING_SLP)}\r\n                                                        <MDBBox tag=\"span\" className=\"d-block\">\r\n                                                            (&#8369; {this.numberWithCommas((PLAYER.TOTALEARNING_PHP).toFixed(2))})\r\n                                                        </MDBBox>\r\n                                                    </React.Fragment>\r\n                                                ) : (0) // If user is email x display 0 for other player\r\n                                            }\r\n                                        </MDBBox>,\r\n                    rank: <MDBBox data-th={MESSAGE.RANK} tag=\"span\">{PLAYER.LEADERBOARD.rank + \" \" + PLAYER.LEADERBOARD.tier}</MDBBox>,\r\n                    topRank: <MDBBox data-th={MESSAGE.RANK} tag=\"span\">{this.numberWithCommas(PLAYER.LEADERBOARD.topRank)}</MDBBox>,\r\n                    leaderboard: <MDBBox data-th={MESSAGE.LEADERBOARD} tag=\"span\">{PLAYER.LEADERBOARD.rank + \" \" + PLAYER.LEADERBOARD.tier} <MDBBox tag=\"span\" className=\"d-inline d-md-block d-lg-block\">{PLAYER.LEADERBOARD.topRank > 0 ? (\"(\" + this.numberWithCommas(PLAYER.LEADERBOARD.topRank) + \")\") : (\"\")}</MDBBox></MDBBox>,\r\n                    clickEvent: this.modalPlayerDetailsToggle(PLAYER.ID, [PLAYER])\r\n                };\r\n                \r\n                // Success return\r\n                return resolve({\r\n                    error: false,\r\n                    data: playerDataTableRes,\r\n                    inGameSLP: PLAYER.INGAME.quantity,\r\n                    topRank: PLAYER.LEADERBOARD.topRank,\r\n                    nameTopRank: `${PLAYER.NAME} (${PLAYER.LEADERBOARD.rank} ${PLAYER.LEADERBOARD.tier})`,\r\n                    nameTopInGameSLP: `${PLAYER.NAME} (${PLAYER.INGAME.quantity})`,\r\n                    eth: userEthAddress,\r\n                    isDelete: PLAYER.DELETEIND ? PLAYER.DELETEIND : \"\"\r\n                });\r\n            } else {\r\n                return reject({error: true, category: \"processPlayerDetails\"});\r\n            }\r\n        }).catch(err => {\r\n            console.error(MESSAGE.ERROR_OCCURED, err)\r\n            return err;\r\n        });\r\n    }\r\n\r\n    // Get Player Wallet\r\n    getPlayerWallet = async (details) => {\r\n        return new Promise((resolve, reject) => {\r\n            $.ajax({\r\n                url: \"https://ronin.rest/ronin/wallet/\" + details.ADDRESS,\r\n                dataType: \"json\",\r\n                cache: false\r\n            })\r\n            .then(\r\n                (result) => {\r\n                    try {\r\n                        if (result.error === undefined && Object.keys(result).length > 0) {\r\n                            if (result.balances && Object.keys(result.balances).length > 0) {\r\n                                // Sucess Return x Setup property key and value\r\n                                const dataSet = {\r\n                                    slp: (result.balances.SLP.balance).length <= 6 ? result.balances.SLP.balance : 0,\r\n                                    axs: Number(result.balances.AXS.balance).toFixed(4),\r\n                                    ron: Number(result.balances.RON.balance).toFixed(4)\r\n                                }\r\n                                return resolve(dataSet);\r\n                            } else {\r\n                                // Hass Error\r\n                                return reject({error: true, category: \"getPlayerWallet\"});\r\n                            }\r\n                        } else {\r\n                            // Hass Error\r\n                            return reject({error: true, category: \"getPlayerWallet\"});\r\n                        }\r\n                    } catch (error) {\r\n                        return reject({error: true, data: error, category: \"getPlayerWallet\"});\r\n                    }\r\n                },\r\n                // Note: it's important to handle errors here\r\n                // instead of a catch() block so that we don't swallow\r\n                // exceptions from actual bugs in components.\r\n                (error) => {\r\n                    console.error(MESSAGE.ERROR_OCCURED, error)\r\n                    return reject({error: true, data: error, category: \"getPlayerWallet\"})\r\n                }\r\n            )\r\n            .catch(\r\n                (err) => {\r\n                    console.error(MESSAGE.ERROR_OCCURED, err)\r\n                    return reject({error: true, data: err, category: \"getPlayerWallet\"});\r\n                }\r\n            )\r\n        }).catch(err => {\r\n            console.error(MESSAGE.ERROR_OCCURED, err)\r\n            return err;\r\n        });\r\n    }\r\n\r\n    // Get Player Leaderboard\r\n    getPlayerLeaderboard = async (details) => {\r\n        return new Promise((resolve, reject) => {\r\n            $.ajax({\r\n                url: \"https://ronin.rest/origin/leaderboard/search?player=\" + details.ADDRESS,\r\n                dataType: \"json\",\r\n                cache: false\r\n            })\r\n            .then(\r\n                (res) => {\r\n                    try {\r\n                        if (res.result !== null && res.result !== undefined && Object.keys(res.result).length > 0) {\r\n                            // Sucess Return\r\n                            return resolve(res.result);\r\n                        } else {\r\n                            // Hass Error\r\n                            return reject({error: true, category: \"getPlayerLeaderboard\"});\r\n                        }\r\n                    } catch (error) {\r\n                        return reject({error: true, data: error, category: \"getPlayerLeaderboard\"});\r\n                    }\r\n                },\r\n                // Note: it's important to handle errors here\r\n                // instead of a catch() block so that we don't swallow\r\n                // exceptions from actual bugs in components.\r\n                (error) => {\r\n                    console.error(MESSAGE.ERROR_OCCURED, error)\r\n                    return reject({error: true, data: error, category: \"getPlayerLeaderboard\"})\r\n                }\r\n            )\r\n            .catch(\r\n                (err) => {\r\n                    console.error(MESSAGE.ERROR_OCCURED, err)\r\n                    return reject({error: true, data: err, category: \"getPlayerLeaderboard\"});\r\n                }\r\n            )\r\n        }).catch(err => {\r\n            console.error(MESSAGE.ERROR_OCCURED, err)\r\n            return err;\r\n        });\r\n    }\r\n\r\n    // Render Crypto Currency details\r\n    renderCurrencies() {\r\n        if (this.state.currencySLP > 0) {\r\n            return (\r\n                <React.Fragment>\r\n                    <MDBCol size=\"12\" className=\"mb-3\">\r\n                        <MDBBox tag=\"div\" className=\"py-3 px-2 text-center currency-details\">\r\n                            <MDBBox tag=\"span\">\r\n                                {MESSAGE.PRICE_BASEON}\r\n                                <a href={this.state.currencyURI} target=\"_blank\" rel=\"noreferrer\"> {this.state.currencyNAME}. </a>\r\n                                {MESSAGE.CURRENT_EXCHANGERATE}:\r\n                                <MDBBox tag=\"span\">\r\n                                    <strong> 1 {MESSAGE.SLP} = {this.state.currencySLP} </strong>\r\n                                    and\r\n                                    <strong> 1 {MESSAGE.AXS} = {this.state.currencyAXS}</strong>\r\n                                </MDBBox>\r\n                            </MDBBox>\r\n                        </MDBBox>\r\n                    </MDBCol>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n    }\r\n\r\n    // Render Total Earnings of Manager, Scholar and Sponsor and other details\r\n    renderSubDetails() {\r\n        if ( this.state.isPlayerLoaded && this.state.isLoaded && !this.state.error ) {\r\n            return (\r\n                <React.Fragment>\r\n                    {this.state.isUser === MESSAGE.MANAGER || this.state.isUserEmail ? (\r\n                        <React.Fragment>\r\n                            {/* Top MMR and SLP */}\r\n                            <MDBCol size=\"6\" md=\"4\" lg=\"2\" className=\"my-2\">\r\n                                <MDBCard className=\"z-depth-2 player-details h-180px\">\r\n                                    <MDBCardBody className=\"black-text cursor-pointer d-flex-center\" onClick={this.modalLeaderboardToggle()}>\r\n                                        <MDBBox tag=\"div\" className=\"text-center\">\r\n                                            {/* Top Leaderboard */}\r\n                                            <MDBBox tag=\"span\" className=\"d-block\">{MESSAGE.TOP_MMR}</MDBBox>\r\n                                            <MDBBox tag=\"span\" className=\"d-block font-size-1rem font-weight-bold\"><strong>{this.state.topUserRank}</strong></MDBBox>\r\n                                            {/* Top In Game SLP */}\r\n                                            <MDBBox tag=\"span\" className=\"d-block mt-3\">{MESSAGE.TOP_INGAME_SLP}</MDBBox>\r\n                                            <MDBBox tag=\"span\" className=\"d-block font-size-1rem font-weight-bold\"><strong>{this.state.topUserInGameSLP}</strong></MDBBox>\r\n                                        </MDBBox>\r\n                                    </MDBCardBody>\r\n                                </MDBCard>\r\n                            </MDBCol>\r\n\r\n                            {/* Total Average SLP of all players */}\r\n                            <MDBCol size=\"6\" md=\"4\" lg=\"2\" className=\"my-2\">\r\n                                <MDBCard className=\"z-depth-2 player-details h-180px\">\r\n                                    <MDBCardBody className=\"black-text d-flex-center\">\r\n                                        <MDBBox tag=\"div\" className=\"text-center\">\r\n                                            <MDBBox tag=\"span\" className=\"d-block\">{MESSAGE.TOTAL_AVERAGE_SLP}</MDBBox>\r\n                                            <MDBBox tag=\"span\" className=\"d-block font-size-1pt3rem font-weight-bold\">\r\n                                                <img src=\"/assets/images/smooth-love-potion.png\" className=\"w-24px mr-1 mt-0pt3rem-neg\" alt=\"SLP\" />\r\n                                                {this.numberWithCommas(Math.floor(this.state.totalAverageInGameSLP))}\r\n                                            </MDBBox>\r\n                                            <MDBBox tag=\"span\" className=\"d-block font-size-1pt3rem font-weight-bold\">&#8369; {this.numberWithCommas((Number(this.state.totalAverageInGameSLP) * Number(this.state.currencySLP)).toFixed(2))}</MDBBox>\r\n                                        </MDBBox>\r\n                                    </MDBCardBody>\r\n                                </MDBCard>\r\n                            </MDBCol>\r\n\r\n                            {/* Total InGame SLP */}\r\n                            <MDBCol size=\"6\" md=\"4\" lg=\"2\" className=\"my-2\">\r\n                                <MDBCard className=\"z-depth-2 player-details h-180px\">\r\n                                    <MDBCardBody className=\"black-text d-flex-center\">\r\n                                        <MDBBox tag=\"div\" className=\"text-center\">\r\n                                            <MDBBox tag=\"span\" className=\"d-block\">{MESSAGE.TOTAL_INGAME_SLP}</MDBBox>\r\n                                            <MDBBox tag=\"span\" className=\"d-block font-size-1pt3rem font-weight-bold\">\r\n                                                <img src=\"/assets/images/smooth-love-potion.png\" className=\"w-24px mr-1 mt-0pt3rem-neg\" alt=\"SLP\" />\r\n                                                {this.numberWithCommas(this.state.totalInGameSLP)}\r\n                                            </MDBBox>\r\n                                            <MDBBox tag=\"span\" className=\"d-block font-size-1pt3rem font-weight-bold\">&#8369; {this.numberWithCommas((Number(this.state.totalInGameSLP) * Number(this.state.currencySLP)).toFixed(2))}</MDBBox>\r\n                                        </MDBBox>\r\n                                    </MDBCardBody>\r\n                                </MDBCard>\r\n                            </MDBCol>\r\n        \r\n                            {/* Total Scholar SLP */}\r\n                            <MDBCol size=\"6\" md=\"4\" lg=\"2\" className=\"my-2\">\r\n                                <MDBCard className=\"z-depth-2 player-details h-180px\">\r\n                                    <MDBCardBody className=\"black-text d-flex-center\">\r\n                                        <MDBBox tag=\"div\" className=\"text-center\">\r\n                                            <MDBBox tag=\"span\" className=\"d-block\">{MESSAGE.TOTAL_SCHOLAR_SLP}</MDBBox>\r\n                                            <MDBBox tag=\"span\" className=\"d-block font-size-1pt3rem font-weight-bold\">\r\n                                                <img src=\"/assets/images/smooth-love-potion.png\" className=\"w-24px mr-1 mt-0pt3rem-neg\" alt=\"SLP\" />\r\n                                                {this.numberWithCommas(this.state.totalScholarSLP)}\r\n                                            </MDBBox>\r\n                                            <MDBBox tag=\"span\" className=\"d-block font-size-1pt3rem font-weight-bold\">&#8369; {this.numberWithCommas((Number(this.state.totalScholarSLP) * Number(this.state.currencySLP)).toFixed(2))}</MDBBox>\r\n                                        </MDBBox>\r\n                                    </MDBCardBody>\r\n                                </MDBCard>\r\n                            </MDBCol>\r\n        \r\n                            {/* Total Sponsor SLP */}\r\n                            <MDBCol size=\"6\" md=\"4\" lg=\"2\" className=\"my-2\">\r\n                                <MDBCard className=\"z-depth-2 player-details h-180px\">\r\n                                    <MDBCardBody className=\"black-text d-flex-center\">\r\n                                        <MDBBox tag=\"div\" className=\"text-center\">\r\n                                            <MDBBox tag=\"span\" className=\"d-block\">{MESSAGE.TOTAL_SPONSOR_SLP}</MDBBox>\r\n                                            <MDBBox tag=\"span\" className=\"d-block font-size-1pt3rem font-weight-bold\">\r\n                                                <img src=\"/assets/images/smooth-love-potion.png\" className=\"w-24px mr-1 mt-0pt3rem-neg\" alt=\"SLP\" />\r\n                                                {this.numberWithCommas(this.state.totalSponsorSLP)}\r\n                                            </MDBBox>\r\n                                            <MDBBox tag=\"span\" className=\"d-block font-size-1pt3rem font-weight-bold\">&#8369; {this.numberWithCommas((Number(this.state.totalSponsorSLP) * (this.state.currencySLP)).toFixed(2))}</MDBBox>\r\n                                        </MDBBox>\r\n                                    </MDBCardBody>\r\n                                </MDBCard>\r\n                            </MDBCol>\r\n        \r\n                            {/* Total Manager SLP */}\r\n                            <MDBCol size=\"6\" md=\"4\" lg=\"2\" className=\"my-2\">\r\n                                <MDBCard className=\"z-depth-2 player-details h-180px\">\r\n                                    <MDBCardBody \r\n                                        className={this.state.isUser === MESSAGE.MANAGER ? \"black-text cursor-pointer d-flex-center\" : \"black-text d-flex-center\"}\r\n                                        onClick={this.state.isUser === MESSAGE.MANAGER && this.state.managerEarnings ? this.modalManagerEarningToggle() : () => {}} >\r\n                                        <MDBBox tag=\"div\" className=\"text-center\">\r\n                                            <MDBBox tag=\"span\" className=\"d-block\">{MESSAGE.TOTAL_MANAGERCLAIMABLE_SLP}</MDBBox>\r\n                                            <MDBBox tag=\"span\" className=\"d-block font-size-1pt3rem font-weight-bold\">\r\n                                                <img src=\"/assets/images/smooth-love-potion.png\" className=\"w-24px mr-1 mt-0pt3rem-neg\" alt=\"SLP\" />\r\n                                                {\r\n                                                    this.state.isUser === MESSAGE.MANAGER ? (\r\n                                                        this.numberWithCommas(this.state.totalManagerClaimableSLP)\r\n                                                    ) : (0)\r\n                                                }\r\n                                            </MDBBox>\r\n                                            <MDBBox tag=\"span\" className=\"d-block font-size-1pt3rem font-weight-bold\">&#8369; {this.state.isUser === MESSAGE.MANAGER ? (this.numberWithCommas((Number(this.state.totalManagerClaimableSLP) * Number(this.state.currencySLP)).toFixed(2))) : (\"0.00\")}</MDBBox>\r\n                                        </MDBBox>\r\n                                    </MDBCardBody>\r\n                                </MDBCard>\r\n                            </MDBCol>\r\n                        </React.Fragment>\r\n                    ) : (\"\")}\r\n\r\n                    {this.state.isUser !== MESSAGE.MANAGER && !this.state.isUserEmail && Object.keys(this.state.playerRecords).length > 0 ? (\r\n                        <React.Fragment>\r\n                            <MDBCol size=\"12\" className=\"mb-3\">\r\n                                <MDBBox tag=\"div\" className=\"py-3 px-2 text-center player-details cursor-pointer\" onClick={this.modalLeaderboardToggle()}>\r\n                                    {/* Top ELO / MMR Rank */}\r\n                                    <MDBBox tag=\"span\" className=\"d-block d-md-inline d-lg-inline\">{MESSAGE.TOP_MMR}: <strong>{this.state.topUserRank}</strong></MDBBox>\r\n                                    {/* Top In Game SLP */}\r\n                                    <MDBBox tag=\"span\" className=\"d-block d-md-inline d-lg-inline ml-2\">{MESSAGE.TOP_INGAME_SLP}: <strong>{this.state.topUserInGameSLP}</strong></MDBBox>\r\n                                </MDBBox>\r\n                            </MDBCol>\r\n                        </React.Fragment>\r\n                    ) : (\"\")}\r\n\r\n                    {this.state.isUser === this.state.isSponsorName && this.state.totalSponsorSLP > 0 ? (\r\n                        <React.Fragment>\r\n                            <MDBCol size=\"12\">\r\n                                <MDBBox tag=\"div\" className=\"py-3 px-2 text-center player-details\">\r\n                                    <MDBBox tag=\"span\" className=\"blue-whale d-block cursor-pointer\">\r\n                                        {MESSAGE.SPONSOR_EARNING}: {MESSAGE.SLP} {this.state.totalSponsorSLP} (&#8369; {this.numberWithCommas((Number(this.state.totalSponsorSLP) * (this.state.currencySLP)).toFixed(2))})\r\n                                    </MDBBox>\r\n                                </MDBBox>\r\n                            </MDBCol>\r\n                        </React.Fragment>\r\n                    ) : (\"\")}\r\n                </React.Fragment>\r\n            )\r\n        }\r\n    }\r\n\r\n    // Render Modal for viewing of Leaderboard\r\n    renderModalLeaderboard() {\r\n        return (\r\n            <React.Fragment>\r\n                <MDBModal isOpen={this.state.isModalLeaderboardOpen} size=\"lg\">\r\n                    <MDBModalHeader toggle={this.modalLeaderboardToggle()}>{MESSAGE.LEADERBOARD}</MDBModalHeader>\r\n                    <MDBModalBody>\r\n                        <MDBDataTable\r\n                            striped bordered hover responsive noBottomColumns\r\n                            sortable={false}\r\n                            entries={5}\r\n                            displayEntries={false}\r\n                            data={this.state.leaderboardDatatable}\r\n                            className=\"default-datatable-container text-center\"\r\n                        />\r\n                    </MDBModalBody>\r\n                </MDBModal>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    // Render Modal for viewing of Manager Earning\r\n    renderModalManagerEarnings() {\r\n        if(this.state.managerEarnings) {\r\n            return (\r\n                <React.Fragment>\r\n                    <MDBModal isOpen={this.state.isModalManagerEarningOpen} size=\"lg\">\r\n                        <MDBModalHeader toggle={this.modalManagerEarningToggle()}>{MESSAGE.MANAGER_ALL_EARNINGS}</MDBModalHeader>\r\n                        <MDBModalBody>\r\n                            <React.Fragment>\r\n                                <MDBTable scrollY maxHeight=\"70vh\" bordered striped responsive>\r\n                                    <MDBTableHead color=\"rgba-teal-strong\" textWhite>\r\n                                        <tr>\r\n                                            <th colSpan=\"5\" className=\"text-center font-weight-bold\">{MESSAGE.MANAGER_EARNING}</th>\r\n                                        </tr>\r\n                                    </MDBTableHead>\r\n                                    <MDBTableBody>\r\n                                        {/* Total Earnings */}\r\n                                        <tr className=\"text-center\">\r\n                                            <td rowSpan=\"2\" className=\"font-weight-bold v-align-middle text-uppercase\">{MESSAGE.TOTAL_EARNINGS}</td>\r\n                                            <td colSpan=\"4\" className=\"font-weight-bold\">{MESSAGE.SLP}: {this.numberWithCommas(this.state.managerEarnings.TOTAL.SLP)}</td>\r\n                                        </tr>\r\n                                        <tr className=\"text-center\">\r\n                                            <td colSpan=\"4\" className=\"font-weight-bold table-gray-bg\"><span>&#8369; </span>{this.numberWithCommas((this.state.managerEarnings.TOTAL.PHP).toFixed(2))}</td>\r\n                                        </tr>\r\n                                        {/* Income by Categories */}\r\n                                        <tr className=\"text-center\">\r\n                                            <td className=\"font-weight-bold text-uppercase\">{MESSAGE.BUY}</td>\r\n                                            <td className=\"font-weight-bold text-uppercase\">{MESSAGE.BREED}</td>\r\n                                            <td className=\"font-weight-bold text-uppercase\">{MESSAGE.ROI}</td>\r\n                                            <td colSpan=\"2\" className=\"font-weight-bold text-uppercase\">{MESSAGE.INCOME}</td>\r\n                                        </tr>\r\n                                        <tr className=\"text-center\">\r\n                                            <td>{this.numberWithCommas((this.state.managerEarnings.TOTAL.BUY).toFixed(2))}</td>\r\n                                            <td>{this.numberWithCommas((this.state.managerEarnings.TOTAL.BREED).toFixed(2))}</td>\r\n                                            <td className={this.state.managerEarnings.REACHEDROI ? \"green-text\" : \"red-text\"}>{this.numberWithCommas((this.state.managerEarnings.TOTAL.ROI).toFixed(2))}</td>\r\n                                            <td>{this.numberWithCommas((this.state.managerEarnings.TOTAL.INCOME).toFixed(2))}</td>\r\n                                        </tr>\r\n                                        {/* Earning per cash out */}\r\n                                        <tr className=\"rgba-teal-strong-bg\">\r\n                                            <td colSpan=\"5\" className=\"text-center font-weight-bold white-text\">{MESSAGE.EARNINGS}</td>\r\n                                        </tr>\r\n                                        <tr className=\"text-center\">\r\n                                            <td className=\"font-weight-bold text-uppercase\">{MESSAGE.DATE}</td>\r\n                                            <td className=\"font-weight-bold text-uppercase\">{MESSAGE.SLP}</td>\r\n                                            <td className=\"font-weight-bold text-uppercase\">{MESSAGE.SLP_PRICE}</td>\r\n                                            <td className=\"font-weight-bold text-uppercase\">{MESSAGE.EARNING}</td>\r\n                                        </tr>\r\n                                        {\r\n                                            Object.keys(this.state.managerEarnings.CLAIMED).length > 0 ? (\r\n                                                this.state.managerEarnings.CLAIMED.sort((a, b) =>  moment(b.EARNED_ON).unix() - moment(a.EARNED_ON).unix() ).map(items => (\r\n                                                    <tr key={items.ID} className=\"text-center\">\r\n                                                        <td>{<Moment format=\"MMM DD, YYYY\">{items.EARNED_ON}</Moment>}</td>\r\n                                                        <td>{items.SLPTOTAL}</td>\r\n                                                        <td className=\"text-uppercase\">{items.SLPCURRENCY}</td>\r\n                                                        <td>{(items.PHPTOTAL).toLocaleString()}</td>\r\n                                                    </tr>\r\n                                                ))\r\n                                            ) : (\"\")\r\n                                        }\r\n                                    </MDBTableBody>\r\n                                </MDBTable>\r\n                            </React.Fragment>\r\n                        </MDBModalBody>\r\n                    </MDBModal>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n    }\r\n\r\n    // Render Modal for viewing of Players Details\r\n    renderModalPlayerDetails() {\r\n        return (\r\n            <React.Fragment>\r\n                <MDBModal isOpen={this.state.isModalPlayerDetailsOpen} size=\"lg\">\r\n                    <MDBModalHeader toggle={this.modalPlayerDetailsToggle(\"\", \"\")}>\r\n                        {\r\n                            Object.keys(this.state.modalPlayerDetails).length > 0 ? (\r\n                                <React.Fragment>\r\n                                    {this.state.modalPlayerDetails[0].NAME}\r\n                                </React.Fragment>\r\n                            ) : (MESSAGE.DETAILS)\r\n                        }\r\n                    </MDBModalHeader>\r\n                    <MDBModalBody>\r\n                        {/* Header details */}\r\n                        {\r\n                            Object.keys(this.state.modalPlayerDetails).length > 0 ? (\r\n                                <React.Fragment>\r\n                                    <MDBRow between>\r\n                                        {/* Started playing */}\r\n                                        <MDBCol size=\"12\" md=\"6\" lg=\"6\">\r\n                                            <MDBBox tag=\"span\" className=\"d-block\">\r\n                                                <strong>{MESSAGE.STARTED}:</strong> <Moment format=\"MMM DD, YYYY\">{this.state.modalPlayerDetails[0].STARTED_ON}</Moment>\r\n                                            </MDBBox>\r\n                                        </MDBCol>\r\n                                        {/* Market Place link */}\r\n                                        <MDBCol size=\"12\" md=\"6\" lg=\"6\">\r\n                                            <MDBBox tag=\"u\" className=\"d-block d-md-none d-lg-none\">\r\n                                                <a href={\"https://marketplace.axieinfinity.com/profile/\" + this.state.modalPlayerDetails[0].ADDRESS + \"/axie\"} target=\"_blank\" rel=\"noreferrer\" className=\"black-text\">\r\n                                                    {MESSAGE.OPEN_MARKETPLACE_PROFILE}\r\n                                                </a>\r\n                                            </MDBBox>\r\n                                            <MDBBox tag=\"u\" className=\"d-none d-md-block d-lg-block text-right\">\r\n                                                <a href={\"https://marketplace.axieinfinity.com/profile/\" + this.state.modalPlayerDetails[0].ADDRESS + \"/axie\"} target=\"_blank\" rel=\"noreferrer\" className=\"black-text\">\r\n                                                    {MESSAGE.OPEN_MARKETPLACE_PROFILE}\r\n                                                </a>\r\n                                            </MDBBox>\r\n                                        </MDBCol>\r\n                                        {/* Ronin Address */}\r\n                                            <MDBCol size=\"12\">\r\n                                                <MDBBox tag=\"span\" className=\"d-block selectable-text\">\r\n                                                    <strong>{MESSAGE.RONIN}:</strong> {this.state.modalPlayerDetails[0].ADDRESS}\r\n                                                </MDBBox>\r\n                                            </MDBCol>\r\n                                        {/* Email */}\r\n                                        {\r\n                                            this.state.isUser === MESSAGE.MANAGER || !this.state.isUserEmail || (this.state.isUser).toLowerCase() === (this.state.modalPlayerDetails[0].EMAIL).toLowerCase() ? (\r\n                                                <MDBCol size=\"12\">\r\n                                                    <MDBBox tag=\"span\" className=\"d-block selectable-text\">\r\n                                                        <strong>{MESSAGE.EMAIL}:</strong> {this.state.modalPlayerDetails[0].EMAIL}\r\n                                                    </MDBBox>\r\n                                                </MDBCol>\r\n                                            ) : (\"\")\r\n                                        }\r\n                                    </MDBRow>\r\n\r\n                                    {\r\n                                        this.state.isViewAxieTeam === MESSAGE.VIEW_AXIE_TEAM ? (\r\n                                            // View Gained SLP Chart\r\n                                            <React.Fragment>\r\n                                                {\r\n                                                    // Display only the view earnings for specific user\r\n                                                    this.state.isUser === MESSAGE.MANAGER || !this.state.isUserEmail || (this.state.isUser).toLowerCase() === (this.state.modalPlayerDetails[0].details.EMAIL).toLowerCase() ? (\r\n                                                        <MDBBox tag=\"u\" className=\"d-block mb-2 cursor-pointer\" onClick={this.onScholarEaningNActiveTeamHandle.bind(this)}>{MESSAGE.VIEW_EARNINGS}</MDBBox> // Opposite label x for hide and show\r\n                                                    ) : (\"\")\r\n                                                }\r\n\r\n                                                {\r\n                                                    // Display Active Axie Team\r\n                                                }\r\n                                            </React.Fragment>\r\n                                        ) : (\r\n                                            // View Earnings\r\n                                            <React.Fragment>\r\n                                                <MDBBox tag=\"u\" className=\"d-block mb-2 cursor-pointer\" onClick={this.onScholarEaningNActiveTeamHandle.bind(this)}>{MESSAGE.VIEW_AXIE_TEAM}</MDBBox> {/* Opposite label x for hide and show */}\r\n                                                {/* Table Details */}\r\n                                                <MDBTable scrollY maxHeight=\"70vh\" bordered striped responsive className=\"mt-2\">\r\n                                                    <MDBTableBody>\r\n                                                        {/* Total Income */}\r\n                                                        <tr>\r\n                                                            <td colSpan=\"4\" className=\"text-center font-weight-bold rgba-teal-strong white-text\">\r\n                                                                <span>{MESSAGE.TOTALINCOME}: &#8369; </span>\r\n                                                                {(this.state.modalPlayerDetails[0].WITHDRAWEARNING.TOTALINCOME).toLocaleString()}\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                        <tr className=\"text-center\">\r\n                                                            <td className=\"font-weight-bold text-uppercase\">{MESSAGE.DATE}</td>\r\n                                                            <td className=\"font-weight-bold text-uppercase\">{MESSAGE.SLP}</td>\r\n                                                            <td className=\"font-weight-bold text-uppercase\">{MESSAGE.SLP_PRICE}</td>\r\n                                                            <td className=\"font-weight-bold text-uppercase\">{MESSAGE.EARNING}</td>\r\n                                                        </tr>\r\n                                                        {\r\n                                                            \r\n                                                            this.state.modalPlayerDetails[0].WITHDRAWEARNING.CLAIMED !== undefined && \r\n                                                            Object.keys(this.state.modalPlayerDetails[0].WITHDRAWEARNING.CLAIMED).length > 0 ? (\r\n                                                                (this.state.modalPlayerDetails[0].WITHDRAWEARNING.CLAIMED).sort((a, b) => moment(b.WITHDRAW_ON).unix() - moment(a.WITHDRAW_ON).unix()).map(items => (\r\n                                                                    <tr key={items.ID} className=\"text-center\">\r\n                                                                        <td>{<Moment format=\"MMM DD, YYYY\">{items.WITHDRAW_ON}</Moment>}</td>\r\n                                                                        <td>{items.SLPTOTAL}</td>\r\n                                                                        <td className=\"text-uppercase\">{items.SLPCURRENCY}</td>\r\n                                                                        <td>{(items.PHPTOTAL).toLocaleString()}</td>\r\n                                                                    </tr>\r\n                                                                ))\r\n                                                            ) : (\"\")\r\n                                                        }\r\n                                                    </MDBTableBody>\r\n                                                </MDBTable>\r\n                                            </React.Fragment>\r\n                                        )\r\n                                    }\r\n                                </React.Fragment>\r\n                            ) : (\"\")\r\n                        }\r\n                    </MDBModalBody>\r\n                </MDBModal>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    // Render Modal for adding new team\r\n    renderModalIskoInputs() {\r\n        return (\r\n            <React.Fragment>\r\n                <MDBModal isOpen={this.state.isModalIskoInputsOpen} size=\"md\">\r\n                    <MDBModalHeader toggle={this.modalIskoInputs(\"\")} className=\"blue-whale\">{MESSAGE.LOKI_INPUTS}</MDBModalHeader>\r\n                    <MDBModalBody>\r\n                        <MDBNav className=\"nav-tabs\">\r\n                            <MDBNavItem>\r\n                                <span\r\n                                    className={this.state.tabIskoInputsActive === \"1\" ? \"nav-link cursor-pointer active\" : \"nav-link cursor-pointer\"}\r\n                                    onClick={this.tabsIskoInputs(\"1\")}\r\n                                    role=\"tab\" >\r\n                                    {MESSAGE.ADD_EDIT}\r\n                                </span>\r\n                            </MDBNavItem>\r\n                            <MDBNavItem>\r\n                                <span\r\n                                    className={this.state.tabIskoInputsActive === \"2\" ? \"nav-link active cursor-pointer\" : \"nav-link cursor-pointer\"}\r\n                                    onClick={this.tabsIskoInputs(\"2\")}\r\n                                    role=\"tab\" >\r\n                                    {MESSAGE.WITHDRAW}\r\n                                </span>\r\n                            </MDBNavItem>\r\n                            <MDBNavItem>\r\n                                <span\r\n                                    className={this.state.tabIskoInputsActive === \"3\" ? \"nav-link active cursor-pointer\" : \"nav-link cursor-pointer\"}\r\n                                    onClick={this.tabsIskoInputs(\"3\")}\r\n                                    role=\"tab\" >\r\n                                    {MESSAGE.MANAGER_EARNING}\r\n                                </span>\r\n                            </MDBNavItem>\r\n                        </MDBNav>\r\n                        <MDBTabContent activeItem={this.state.tabIskoInputsActive} >\r\n                            <MDBTabPane tabId=\"1\" role=\"tabpanel\">\r\n                                <form onSubmit={this.onAddEditRecordHandle.bind(this)} className=\"addEdit-inputHolder\">\r\n                                    <MDBBox tag=\"div\" className=\"grey-text\">\r\n                                        <MDBBox tag=\"div\" className=\"select-mdb-custom mt-3\">\r\n                                            <MDBBox tag=\"select\" className=\"select-mdb-content\" onChange={this.handleAddEditIskoChange.bind(this)} value={this.state.slctAddEditId}>\r\n                                                <MDBBox tag=\"option\" value=\"\">{MESSAGE.ADDNEW_ISKO}</MDBBox>\r\n                                                {\r\n                                                    Object.keys(this.state.playerRecords).length > 0 ? (\r\n                                                        this.state.playerRecords.sort(function (a, b) {\r\n                                                            if (a.NAME > b.NAME) {\r\n                                                                return 1;\r\n                                                            } else if (a.NAME < b.NAME) {\r\n                                                                return -1;\r\n                                                            } else {\r\n                                                                return 0;\r\n                                                            }\r\n                                                        }).map((item) => (\r\n                                                            <MDBBox tag=\"option\" key={item.ID} value={item.ID}>\r\n                                                                {item.NAME}\r\n                                                            </MDBBox>\r\n                                                        ))\r\n                                                    ) : (\"\")\r\n                                                }\r\n                                            </MDBBox>\r\n                                            <MDBBox tag=\"span\" className=\"select-mdb-bar\"></MDBBox>\r\n                                            <MDBBox tag=\"label\" className=\"col select-mdb-label\"></MDBBox>\r\n                                        </MDBBox>\r\n                                        <div className=\"md-form\">\r\n                                            <i data-test=\"fa\" className=\"fa fa-address-book prefix\"></i>\r\n                                            <input data-test=\"input\" type=\"text\" className=\"form-control\" name=\"ADDRESS\" required />\r\n                                            <label className=\"active\">{MESSAGE.RONIN_ADDRESS}</label>\r\n                                        </div>\r\n                                        <div className=\"md-form\">\r\n                                            <i data-test=\"fa\" className=\"fa fa-user prefix\"></i>\r\n                                            <input data-test=\"input\" type=\"text\" className=\"form-control\" name=\"NAME\" required />\r\n                                            <label className=\"active\">{MESSAGE.NAME}</label>\r\n                                        </div>\r\n                                        <div className=\"md-form\">\r\n                                            <i data-test=\"fa\" className=\"fa fa-envelope prefix\"></i>\r\n                                            <input data-test=\"input\" type=\"email\" className=\"form-control\" name=\"EMAIL\" required />\r\n                                            <label className=\"active\">{MESSAGE.EMAIL}</label>\r\n                                        </div>\r\n                                        <div className=\"md-form\">\r\n                                            <i data-test=\"fa\" className=\"fa fa-lock prefix\"></i>\r\n                                            <input data-test=\"input\" type=\"text\" className=\"form-control\" name=\"PASS\" required />\r\n                                            <label className=\"active\">{MESSAGE.PASSWORD}</label>\r\n                                        </div>\r\n                                        <MDBRow className=\"mt-1pt5rem-neg\" between>\r\n                                            <MDBCol size=\"6\">\r\n                                                <div className=\"md-form\">\r\n                                                    <input data-test=\"input\" type=\"number\" className=\"form-control\" name=\"SHR_MANAGER\" min=\"0\" max=\"100\" required />\r\n                                                    <label className=\"active\">{MESSAGE.MANAGER}</label>\r\n                                                </div>\r\n                                            </MDBCol>\r\n                                            <MDBCol size=\"6\">\r\n                                                <div className=\"md-form\">\r\n                                                    <input data-test=\"input\" type=\"number\" className=\"form-control\" name=\"SHR_SCHOLAR\" min=\"0\" max=\"100\" required />\r\n                                                    <label className=\"active\">{MESSAGE.SCHOLAR}</label>\r\n                                                </div>\r\n                                            </MDBCol>\r\n                                        </MDBRow>\r\n                                        <MDBInput containerClass=\"md-form mt-2rem-neg checkbox-mdb-custom\" label={MESSAGE.HASSPONSOR} type=\"checkbox\" id=\"hasSponsor-checkbox\" checked={this.state.hasSponsor} onChange={this.handleHasSponsorCheckChange.bind(this)} />\r\n                                        {\r\n                                            this.state.hasSponsor ? (\r\n                                                <MDBRow className=\"mt-1pt5rem-neg\" between>\r\n                                                    <MDBCol size=\"6\">\r\n                                                        <div className=\"md-form\">\r\n                                                            <i data-test=\"fa\" className=\"fa fa-user prefix\"></i>\r\n                                                            <input data-test=\"input\" type=\"text\" className=\"form-control\" name=\"SPONSOR_NAME\" required />\r\n                                                            <label className=\"active\">{MESSAGE.SPONSOR_NAME}</label>\r\n                                                        </div>\r\n                                                    </MDBCol>\r\n                                                    <MDBCol size=\"6\">\r\n                                                        <div className=\"md-form\">\r\n                                                            <input data-test=\"input\" type=\"number\" className=\"form-control\" name=\"SHR_SPONSOR\" min=\"0\" max=\"100\" required />\r\n                                                            <label className=\"active\">{MESSAGE.SPONSOR_SHARE}</label>\r\n                                                        </div>\r\n                                                    </MDBCol>\r\n                                                </MDBRow>\r\n                                            ) : (\"\")\r\n                                        }\r\n                                        <MDBInput containerClass=\"md-form mt-2rem-neg checkbox-mdb-custom redLabel\" label={MESSAGE.DELETE} type=\"checkbox\" id=\"isDelete-checkbox\" checked={this.state.isDeleted} onChange={this.handleIsDeleteCheckChange.bind(this)} />\r\n                                        <MDBBox tag=\"div\" className={this.state.isValidAddTeam === 0 ? \"d-none\" : this.state.isValidAddTeam ? \"d-none\" : \"invalid-feedback mt-0pt3rem-neg mb-2 px-3 d-block\"}>{this.state.errorMsg}</MDBBox>\r\n                                    </MDBBox>\r\n                                    <MDBBox tag=\"div\" className=\"text-center\">\r\n                                        <button className=\"btn btn-default waves-effect waves-light\">\r\n                                            <MDBIcon icon=\"paper-plane\" className=\"mr-1\" />\r\n                                            {MESSAGE.SUBMIT}\r\n                                        </button>\r\n                                    </MDBBox>\r\n                                </form>\r\n                            </MDBTabPane>\r\n                            <MDBTabPane tabId=\"2\" role=\"tabpanel\">\r\n                                <MDBBox tag=\"div\" className=\"select-mdb-custom mt-3\">\r\n                                    <MDBBox tag=\"select\" className=\"select-mdb-content\" onChange={this.handleClaimChange.bind(this)} value={this.state.slctClaimId}>\r\n                                        <MDBBox tag=\"option\" value=\"\">{MESSAGE.SELECT_NAME}</MDBBox>\r\n                                        {\r\n                                            Object.keys(this.state.playerRecords).length > 0 ? (\r\n                                                this.state.playerRecords.sort(function (a, b) {\r\n                                                    if (a.NAME > b.NAME) {\r\n                                                        return 1;\r\n                                                    } else if (a.NAME < b.NAME) {\r\n                                                        return -1;\r\n                                                    } else {\r\n                                                        return 0;\r\n                                                    }\r\n                                                }).map((item) => (\r\n                                                    <MDBBox tag=\"option\" key={item.ID} value={item.ID}>\r\n                                                        {item.NAME}\r\n                                                    </MDBBox>\r\n                                                ))\r\n                                            ) : (\"\")\r\n                                        }\r\n                                    </MDBBox>\r\n                                    <MDBBox tag=\"span\" className=\"select-mdb-bar\"></MDBBox>\r\n                                    <MDBBox tag=\"label\" className=\"col select-mdb-label\"></MDBBox>\r\n                                </MDBBox>\r\n                                <form onSubmit={this.onWithdrawHandle.bind(this)} className=\"claim-inputHolder\">\r\n                                    <MDBBox tag=\"div\" className=\"grey-text\">\r\n                                        <MDBInput label={MESSAGE.RONIN_ADDRESS} name=\"ADDRESS\" type=\"text\" required disabled />\r\n                                        <div className=\"md-form\">\r\n                                            <input data-test=\"input\" type=\"number\" min=\"0\" className=\"form-control\" name=\"SLPTOTAL\" required />\r\n                                            <label className=\"active\">{MESSAGE.TOTAL_SLP}</label>\r\n                                        </div>\r\n                                        <div className=\"md-form\">\r\n                                            <input data-test=\"input\" type=\"number\" min=\"0\" className=\"form-control\" name=\"SLPCURRENCY\" step=\"0.01\" required />\r\n                                            <label className=\"active\">{MESSAGE.SLP_CURRENCY}</label>\r\n                                        </div>\r\n                                        <div className=\"md-form\">\r\n                                            <input data-test=\"input\" type=\"date\" className=\"form-control\" name=\"WITHDRAW_ON\" required />\r\n                                            <label className=\"active\">{MESSAGE.WITHDRAWON}</label>\r\n                                        </div>\r\n                                    </MDBBox>\r\n                                    <MDBBox tag=\"div\" className={this.state.isValidWithdraw === 0 ? \"d-none\" : this.state.isValidWithdraw ? \"d-none\" : \"invalid-feedback mt-1pt5rem-neg mb-2 px-3 d-block\"}>{this.state.errorMsg}</MDBBox>\r\n                                    <MDBBox tag=\"div\" className=\"text-center\">\r\n                                        <button className=\"btn btn-default waves-effect waves-light\" disabled>\r\n                                            <MDBIcon icon=\"paper-plane\" className=\"mr-1\" />\r\n                                            {MESSAGE.SUBMIT}\r\n                                        </button>\r\n                                    </MDBBox>\r\n                                </form>\r\n                            </MDBTabPane>\r\n                            <MDBTabPane tabId=\"3\" role=\"tabpanel\">\r\n                                <form onSubmit={this.onManagerEarnedHandle.bind(this)} className=\"managerEarn-inputHolder\">\r\n                                    <MDBBox tag=\"div\" className=\"grey-text\">\r\n                                        <MDBInput label={MESSAGE.TOTAL_SLP} name=\"SLPTOTAL\" type=\"number\" min=\"0\" required />\r\n                                        <MDBInput label={MESSAGE.SLP_CURRENCY} name=\"SLPCURRENCY\" type=\"number\" step=\"0.01\" min=\"0\" required />\r\n                                        <MDBBox tag=\"div\" className=\"select-mdb-custom mt-2\">\r\n                                            <MDBBox tag=\"select\" className=\"select-mdb-content\">\r\n                                                <MDBBox tag=\"option\" value={MESSAGE.BUY}>{MESSAGE.BUY}</MDBBox>\r\n                                                <MDBBox tag=\"option\" value={MESSAGE.BREED}>{MESSAGE.BREED}</MDBBox>\r\n                                                <MDBBox tag=\"option\" value={MESSAGE.WITHDRAW}>{MESSAGE.WITHDRAW}</MDBBox>\r\n                                            </MDBBox>\r\n                                            <MDBBox tag=\"span\" className=\"select-mdb-bar\"></MDBBox>\r\n                                            <MDBBox tag=\"label\" className=\"col select-mdb-label\"></MDBBox>\r\n                                        </MDBBox>\r\n                                        <div className=\"md-form\">\r\n                                            <input data-test=\"input\" type=\"date\" className=\"form-control\" name=\"EARNED_ON\" required />\r\n                                            <label className=\"active\">{MESSAGE.EARNEDON}</label>\r\n                                        </div>\r\n                                    </MDBBox>\r\n                                    <MDBBox tag=\"div\" className={this.state.isValidManagerEarn === 0 ? \"d-none\" : this.state.isValidManagerEarn ? \"d-none\" : \"invalid-feedback mt-1pt5rem-neg mb-2 px-3 d-block\"}>{this.state.errorMsg}</MDBBox>\r\n                                    <MDBBox tag=\"div\" className=\"text-center\">\r\n                                        <button className=\"btn btn-default waves-effect waves-light\">\r\n                                            <MDBIcon icon=\"paper-plane\" className=\"mr-1\" />\r\n                                            {MESSAGE.SUBMIT}\r\n                                        </button>\r\n                                    </MDBBox>\r\n                                </form>\r\n                            </MDBTabPane>\r\n                        </MDBTabContent>\r\n                    </MDBModalBody>\r\n                </MDBModal>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    // Render Empty Detail\r\n    renderEmptyDetails() {\r\n        return (\r\n            <React.Fragment>\r\n                <MDBRow className=\"justify-content-center align-self-center\">\r\n                    <MDBCol size=\"12\" className=\"justify-content-center align-self-center text-center\">\r\n                        <img src=\"/assets/images/axie_char.png\" className=\"w-200px mt-5\" alt=\"No Data Found\" />\r\n                        <MDBBox tag=\"span\" className=\"d-block py-3 font-size-3rem font-family-architects-daughter red-text\">{MESSAGE.SOMETHING_WENT_WRONG}</MDBBox>\r\n                        <MDBBox tag=\"span\" className=\"d-block font-size-3rem font-family-architects-daughter orange-text\">{MESSAGE.NODATA_FOUND}</MDBBox>\r\n                    </MDBCol>\r\n                </MDBRow>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        document.title = MESSAGE.HOMETITLE;\r\n        return (\r\n            <MDBBox tag=\"div\" className=\"home-wrapper\">\r\n                <MDBAnimation type=\"bounce\" className=\"z-index-1 position-fixed guides-btn\">\r\n                    {\r\n                        this.state.isUser === MESSAGE.MANAGER ? (\r\n                            <React.Fragment>\r\n                                {/* Scholar's input */}\r\n                                <button type=\"button\" className=\"btn btn-default waves-effect waves-light d-block iskoInputs\"\r\n                                    onClick={this.modalIskoInputs()}>\r\n                                    <MDBIcon icon=\"graduation-cap\" className=\"fa-2x\" />\r\n                                </button>\r\n\r\n                                {\r\n                                    //  Object.keys(this.state.exportData).length > 0 ? (\r\n                                    //     <React.Fragment>\r\n                                    //         {/* Export Data */}\r\n                                    //         <ExportCSV csvData={this.state.exportData} fileName={MESSAGE.TEAMLOKI + \"_\" + moment().format(\"MMDDYYYY_HHmmss\")}/>\r\n                                    //     </React.Fragment>\r\n                                    // ) : (\"\")\r\n                                }\r\n                            </React.Fragment>\r\n                        ) : (\"\")\r\n                    }\r\n                </MDBAnimation>\r\n                \r\n                {\r\n                    !this.state.isLoaded ? (\r\n                        // Loading\r\n                    <MDBBox tag=\"div\" className=\"loader-section\">\r\n                        <MDBBox tag=\"div\" className=\"position-fixed z-index-9999 l-0 t-0 r-0 b-0 m-auto overflow-visible flex-center\">\r\n                            <MDBBox tag=\"span\" className=\"loader-spin-dual-ring\"></MDBBox>\r\n                            <MDBBox tag=\"span\" className=\"ml-2 font-size-1rem white-text\">{MESSAGE.LOADING_TEXT}</MDBBox>\r\n                        </MDBBox>\r\n                        <MDBBox tag=\"div\" className=\"loader-backdrop position-fixed z-index-1040 l-0 t-0 r-0 b-0 black\"></MDBBox>\r\n                    </MDBBox>\r\n                    ) : (\"\")\r\n                }\r\n\r\n                {/* Render Notification Bar for Page refresh, Coingecko details and Top Scholar */}\r\n                <MDBContainer className=\"pt-5 mt-5 position-relative\">\r\n                    <MDBRow>\r\n                        {this.renderCurrencies()}\r\n                        {this.renderSubDetails()}\r\n                    </MDBRow>\r\n                </MDBContainer>\r\n\r\n                {\r\n                    this.state.error && this.state.isLoaded ? (\r\n                        // Empty Player details x Error in Ajax\r\n                        <MDBContainer fluid className=\"pt-3 pb-5 mb-5 position-relative display-margin\">\r\n                            {this.renderEmptyDetails()}\r\n                            {this.pageRefresh(5000)} {/* Refresh in 5 seconds if there's an error */}\r\n                        </MDBContainer>\r\n                    ) : (\r\n                        Object.keys(this.state.playerRecords).length <= 0 ? (\r\n                            // Empty Player details\r\n                            <MDBContainer fluid className=\"pt-3 pb-5 mb-5 position-relative display-margin\">\r\n                                {this.renderEmptyDetails()}\r\n                            </MDBContainer>\r\n                        ) : (\r\n                            // Diplay Player details\r\n                            <MDBContainer className=\"pt-3 pb-5 mb-5 position-relative display-margin\">\r\n                                <MDBRow>\r\n                                    {\r\n                                        Object.keys(this.state.playerRecords).length > 0 ? (\r\n                                            <React.Fragment>\r\n                                                {/* Display all data */}\r\n                                                <MDBCol size=\"12\">\r\n                                                    <MDBDataTable\r\n                                                        striped bordered hover responsive noBottomColumns\r\n                                                        sortable={false}\r\n                                                        data={this.state.playerDataTable}\r\n                                                        entries={5}\r\n                                                        entriesOptions={[ 5, 10, 15 ]}\r\n                                                        className=\"player-datatable-container text-white\"\r\n                                                    />\r\n                                                </MDBCol>\r\n                                            </React.Fragment>\r\n                                        ) : (\r\n                                            // Display no data\r\n                                            this.renderEmptyDetails()\r\n                                        )\r\n                                    }\r\n                                </MDBRow>\r\n                            </MDBContainer>\r\n                        )\r\n                    )\r\n                }\r\n\r\n                {/* Render Modal */}\r\n                {this.renderModalLeaderboard()}\r\n                {this.renderModalManagerEarnings()}\r\n                {this.renderModalPlayerDetails()}\r\n                {this.renderModalIskoInputs()}\r\n            </MDBBox>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home","import React from \"react\";\r\nimport $ from 'jquery';\r\nimport { MESSAGE } from '../Constants';\r\nimport {\r\n    MDBContainer, MDBRow, MDBCol, MDBInput, MDBBox,\r\n    MDBCard, MDBCardBody, MDBCardTitle\r\n} from 'mdbreact';\r\nimport Cookies from 'js-cookie'\r\n\r\nclass Login extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            error: false,\r\n            isLoaded: false,\r\n            isNotif: false,\r\n            notifCat: \"default\",\r\n            notifStr: \"\",\r\n            isValidUser: 0,\r\n            errorMsg: MESSAGE.UNEXPECTED_ERROR\r\n        }\r\n    }\r\n\r\n    onLoginHandle(event) {\r\n        event.preventDefault();\r\n        const user = event.target.user.value;\r\n        if (user && user !== undefined) {\r\n            if (user === \"MLoki\") {\r\n                // Display all details\r\n                Cookies.set(\"filter\", MESSAGE.MANAGER);\r\n                Cookies.set(\"isBattleLogEnable\", \"0\");\r\n                localStorage.setItem(\"isLeaderboardEnable\", \"1\");\r\n                // Reload page\r\n                window.location.reload();\r\n            } else {\r\n                // Get Record Data from table / json\r\n                $.ajax({\r\n                    url: \"/api/userProfile/login?credential=\" + user.toUpperCase(),\r\n                    type: \"GET\",\r\n                    contentType: 'application/json',\r\n                    cache: false,\r\n                })\r\n                .then(\r\n                    (result) => {\r\n                        const dataRecords = result.data;\r\n                        const validUser = dataRecords.find(valid => valid.EMAIL.toLowerCase() === user.toLowerCase() || valid.NAME.toLowerCase() === user.toLocaleLowerCase());\r\n                        const validSponsor = dataRecords.find(valid => valid.SPONSOR_NAME.toLowerCase() === user.toLowerCase());\r\n                        if (validUser && validUser !== undefined && Object.keys(validUser).length > 0) {\r\n                            // Display detail based on credential\r\n                            Cookies.set(\"filter\", user);\r\n                            Cookies.set(\"isBattleLogEnable\", \"0\");\r\n                            localStorage.setItem(\"isLeaderboardEnable\", \"1\");\r\n                            // Reload page\r\n                            window.location.reload();\r\n                        } else {\r\n                            if (validSponsor && validSponsor !== undefined && Object.keys(validSponsor).length > 0) {\r\n                                // Display detail based on credential\r\n                                Cookies.set(\"filter\", user)\r\n                                Cookies.set(\"isBattleLogEnable\", \"0\");\r\n                                localStorage.setItem(\"isLeaderboardEnable\", \"1\");\r\n                                // Reload page\r\n                                window.location.reload();\r\n                            } else {\r\n                                this.setState({\r\n                                    isValidUser: false,\r\n                                    errorMsg: MESSAGE.INVALID_CREDENTIAL\r\n                                })\r\n                            }\r\n                        }\r\n                    },\r\n                    // Note: it's important to handle errors here\r\n                    // instead of a catch() block so that we don't swallow\r\n                    // exceptions from actual bugs in components.\r\n                    (error) => {\r\n                        this.setState({\r\n                            isLoaded: true,\r\n                            isNotif: true,\r\n                            notifCat: \"error\",\r\n                            notifStr: MESSAGE.UNEXPECTED_ERROR,\r\n                            error: true,\r\n                            isValidUser: false,\r\n                            errorMsg: MESSAGE.UNEXPECTED_ERROR\r\n                        })\r\n                            \r\n                        console.error(MESSAGE.ERROR_OCCURED, error)\r\n                    }\r\n                )\r\n                .catch(\r\n                    (err) => {\r\n                        this.setState({\r\n                            isLoaded: true,\r\n                            isNotif: true,\r\n                            notifCat: \"error\",\r\n                            notifStr: MESSAGE.UNEXPECTED_ERROR,\r\n                            error: true,\r\n                            isValidUser: false,\r\n                            errorMsg: MESSAGE.UNEXPECTED_ERROR\r\n                        })\r\n                            \r\n                        console.error(MESSAGE.ERROR_OCCURED, err)\r\n                    }\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    // On Change Input\r\n    onInputChangeHandle(event) {\r\n        event.preventDefault();\r\n        this.setState({\r\n            isValidUser: 0\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <MDBContainer className=\"h-50vh\">\r\n                    <MDBRow className=\"h-50vh justify-content-center align-self-center\">\r\n                        <MDBCol sm=\"12\" md=\"6\" lg=\"6\" className=\"justify-content-center align-self-center\">\r\n                            <MDBCard className=\"z-depth-2 w-100\">\r\n                                <MDBCardBody className=\"black-text\">\r\n                                    <MDBCardTitle className=\"font-weight-bold font-family-architects-daughter text-center\">{MESSAGE.SIGNIN}</MDBCardTitle>\r\n                                    <MDBBox tag=\"div\">\r\n                                        <form onSubmit={this.onLoginHandle.bind(this)}>\r\n                                            <MDBBox tag=\"div\" className=\"grey-text\">\r\n                                                <MDBInput\r\n                                                    onChange={this.onInputChangeHandle.bind(this)}\r\n                                                    label={MESSAGE.INPUT_USER}\r\n                                                    name=\"user\"\r\n                                                    icon=\"user\"\r\n                                                    group type=\"text\"\r\n                                                    className={this.state.isValidUser === 0 ? \"\" : this.state.isValidUser ? \"form-control is-valid\" : \"form-control is-invalid\"}\r\n                                                />\r\n                                                <MDBBox tag=\"div\" className={this.state.isValidUser === 0 ? \"d-none\" : this.state.isValidUser ? \"d-none\" : \"invalid-feedback mt-1rem-neg mb-2 d-block\"}>{this.state.errorMsg}</MDBBox>\r\n                                            </MDBBox>\r\n                                            <MDBBox tag=\"div\" className=\"text-center\">\r\n                                                <button className=\"btn btn-default waves-effect waves-light\">{MESSAGE.LOGIN}</button>\r\n                                            </MDBBox>\r\n                                        </form>\r\n                                    </MDBBox>\r\n                                </MDBCardBody>\r\n                            </MDBCard>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </MDBContainer>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login","import React from 'react'\r\nimport Header from './Header'\r\nimport Footer from './Footer'\r\nimport Home from './views/origin/Home' // Home page for Origin details\r\nimport Login from './views/Login'\r\nimport Cookies from 'js-cookie'\r\nimport { MDBBox } from 'mdbreact'\r\nimport 'react-image-lightbox/style.css'; // This only needs to be imported once in your app\r\n\r\nclass Main extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            promptUser: Cookies.get(\"filter\")\r\n        }\r\n    }\r\n\r\n    renderBody() {\r\n        if ( this.state.promptUser !== null && this.state.promptUser !== undefined && this.state.promptUser !== \"\" ) {\r\n            return (\r\n                <React.Fragment>\r\n                    <Header user={this.state.promptUser} />\r\n                    <MDBBox tag=\"div\" className=\"main\">\r\n                        <Home user={this.state.promptUser} />\r\n                    </MDBBox>\r\n                    <Footer />\r\n                </React.Fragment>\r\n            )\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                    <Login />\r\n                </React.Fragment>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <MDBBox tag=\"div\">\r\n                    {this.renderBody()}\r\n                </MDBBox>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Main","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Main from './components/Main';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport './components/assets/sass/screen.scss'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Main />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}